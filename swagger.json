{
  "swagger": "2.0",
  "host": "api.sandbox.socotra.com",
  "basePath": "/",
  "info": {
    "description": "Socotra REST API Description",
    "version": "1.3.191",
    "title": "Socotra API Reference"
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "*/*"
  ],
  "tags": [
    {
      "name": "Analytics"
    },
    {
      "name": "Calculation"
    },
    {
      "name": "Cancellations"
    },
    {
      "name": "Claims"
    },
    {
      "name": "Document"
    },
    {
      "name": "Endorsements"
    },
    {
      "name": "Event stream"
    },
    {
      "name": "Grace period"
    },
    {
      "name": "Invoice"
    },
    {
      "name": "Lapse"
    },
    {
      "name": "Media"
    },
    {
      "name": "PaymentsReversal"
    },
    {
      "name": "Policies"
    },
    {
      "name": "Policy"
    },
    {
      "name": "Policyholder"
    },
    {
      "name": "Policyholders"
    },
    {
      "name": "PremiumReport"
    },
    {
      "name": "Product"
    },
    {
      "name": "Quotes"
    },
    {
      "name": "Reinstatement"
    },
    {
      "name": "Reinstatements"
    },
    {
      "name": "Renewals"
    },
    {
      "name": "Report"
    },
    {
      "name": "Storage / Customization"
    }
  ],
  "paths": {
    "/_analytics/tenant": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "getTenantStatsUsingGET",
        "operationId": "getTenantStatsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TenantStatsResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/account/authenticate": {
      "post": {
        "tags": [],
        "summary": "authenticate3UsingPOST",
        "operationId": "authenticate3UsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AuthenticateRequest3"
            }
          },
          {
            "in": "query",
            "name": "hostName",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "tenantName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuthenticateResponse3"
            }
          }
        },
        "deprecated": false
      }
    },
    "/account/authenticateAdmin": {
      "post": {
        "tags": [],
        "summary": "authenticateAdminUsingPOST",
        "operationId": "authenticateAdminUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AuthenticateRequest3"
            }
          },
          {
            "in": "query",
            "name": "hostName",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "tenantLocator",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "tenantName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuthenticateResponse3"
            }
          }
        },
        "deprecated": false
      }
    },
    "/account/renewAuthentication": {
      "post": {
        "tags": [],
        "summary": "renewAuthentication3UsingPOST",
        "operationId": "renewAuthentication3UsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuthenticateResponse3"
            }
          }
        },
        "deprecated": false
      }
    },
    "/account/sso/accountInternal": {
      "post": {
        "tags": [],
        "summary": "createSsoInternalAccountUsingPOST",
        "operationId": "createSsoInternalAccountUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "internalAccountRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SsoAddInternalAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SsoAccountResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/account/sso/findByHostname": {
      "post": {
        "tags": [],
        "summary": "findAccountsByHostnameUsingPOST",
        "operationId": "findAccountsByHostnameUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "ssoFindByHostnameRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SsoFindByHostnameRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AccountPagedResultResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/account/sso/findByTenant": {
      "post": {
        "tags": [],
        "summary": "findAccountsByTenantUsingPOST",
        "operationId": "findAccountsByTenantUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "ssoFindByTenantRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SsoFindByTenantRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AccountPagedResultResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/account/sso/findTenantsForAdmin": {
      "get": {
        "tags": [],
        "summary": "hostnameForAdminUsingGET",
        "operationId": "hostnameForAdminUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SsoFindTenantsForAdminResponse"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/account/sso/integrations": {
      "post": {
        "tags": [],
        "summary": "getExternalServiceIntegrationsUsingPOST",
        "operationId": "getExternalServiceIntegrationsUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "ssoFindByHostnameRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SsoFindByHostnameRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExternalServiceIntegrationsResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/account/sso/queryLogs": {
      "post": {
        "tags": [],
        "summary": "querySsoLogsUsingPOST",
        "operationId": "querySsoLogsUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "queryLogs",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SsoQueryLogRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QueryResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/account/unlock": {
      "post": {
        "tags": [],
        "summary": "unlockAccountUsingPOST",
        "operationId": "unlockAccountUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountUnlockRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "deprecated": false
      }
    },
    "/account/v1/account": {
      "post": {
        "tags": [],
        "summary": "addAccountUsingPOST",
        "operationId": "addAccountUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "accountRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountAddRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AccountResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/account/v1/account/{accountId}": {
      "delete": {
        "tags": [],
        "summary": "deleteAccountUsingDELETE",
        "operationId": "deleteAccountUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "deprecated": false
      },
      "get": {
        "tags": [],
        "summary": "getAccountUsingGET",
        "operationId": "getAccountUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AccountResponse"
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [],
        "summary": "updateAccountUsingPATCH",
        "operationId": "updateAccountUsingPATCH",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "accountRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AccountResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/account/v1/account/{accountId}/password": {
      "put": {
        "tags": [],
        "summary": "setPasswordUsingPUT",
        "operationId": "setPasswordUsingPUT",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "passwordRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountPasswordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "deprecated": false
      }
    },
    "/account/v1/account/{accountId}/status": {
      "put": {
        "tags": [],
        "summary": "setStatusUsingPUT",
        "operationId": "setStatusUsingPUT",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountStatusRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "deprecated": false
      }
    },
    "/account/v1/accounts/password": {
      "patch": {
        "tags": [],
        "summary": "setPasswordUsingPATCH",
        "operationId": "setPasswordUsingPATCH",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "passwordRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PasswordChangeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "deprecated": false
      }
    },
    "/account/v1/findByTenant": {
      "get": {
        "tags": [],
        "summary": "getAccountsByTenantUsingGET",
        "operationId": "getAccountsByTenantUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AccountPagedResultResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/calculation/checkExistingPerilPremium": {
      "post": {
        "tags": [
          "Calculation"
        ],
        "summary": "checkExistingPerilPremiumUsingPOST",
        "operationId": "checkExistingPerilPremiumUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckExistingPerilPremiumRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CalculationResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/calculation/checkPerilPremium": {
      "post": {
        "tags": [
          "Calculation"
        ],
        "summary": "checkPerilPremiumUsingPOST",
        "operationId": "checkPerilPremiumUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckPerilPremiumRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CalculationResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/cancellations/{locator}": {
      "get": {
        "tags": [
          "Cancellations"
        ],
        "summary": "getCancellationUsingGET",
        "operationId": "getCancellationUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "locator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CancellationResponse"
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "Cancellations"
        ],
        "summary": "updateCancellationUsingPATCH",
        "operationId": "updateCancellationUsingPATCH",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "locator",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "req",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CancellationUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CancellationResponse"
            }
          }
        },
        "description": "\"For a cancellation to be \"+\"updated it must be in the draft state.\"",
        "deprecated": false
      }
    },
    "/cancellations/{locator}/issue": {
      "patch": {
        "tags": [
          "Cancellations"
        ],
        "summary": "issueCancellationUsingPATCH",
        "operationId": "issueCancellationUsingPATCH",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "locator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CancellationResponse"
            }
          }
        },
        "description": "\"This operation is applicable \"+\"to cancellations in the draft state\"",
        "deprecated": false
      }
    },
    "/cancellations/{locator}/price": {
      "get": {
        "tags": [
          "Cancellations"
        ],
        "summary": "priceCancellationUsingGET",
        "operationId": "priceCancellationUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "locator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyPriceChangeResponse"
            }
          }
        },
        "description": "\"A response \"+\"is computed for cancellations that are both valid at the time of the request \"+\"and which are in one of the states: draft, issued, reinstated.\"",
        "deprecated": false
      }
    },
    "/cancellations/{locator}/reinstate": {
      "patch": {
        "tags": [
          "Cancellations"
        ],
        "summary": "reinstateCancellationUsingPATCH",
        "operationId": "reinstateCancellationUsingPATCH",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "locator",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "req",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReinstatementRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReinstatementResponse"
            }
          }
        },
        "description": "\"Cancellations can only have one associated reinstatement and the cancellation must be in the \"+\"issued state for the reinstatement request to be successful.\"",
        "deprecated": false
      }
    },
    "/cancellations/{locator}/rescind": {
      "patch": {
        "tags": [
          "Cancellations"
        ],
        "summary": "rescindCancellationUsingPATCH",
        "operationId": "rescindCancellationUsingPATCH",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "locator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CancellationResponse"
            }
          }
        },
        "description": "\"This operation acts \"+\"on cancellations in the draft state\"",
        "deprecated": false
      }
    },
    "/claim": {
      "post": {
        "tags": [],
        "summary": "createClaim3UsingPOST",
        "operationId": "createClaim3UsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "createRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Claim3CreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Claim3Response"
            }
          }
        },
        "deprecated": false
      }
    },
    "/claim/{claimLocator}": {
      "get": {
        "tags": [],
        "summary": "getClaim3UsingGET",
        "operationId": "getClaim3UsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "claimLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Claim3Response"
            }
          }
        },
        "deprecated": false
      }
    },
    "/claim/{claimLocator}/discard": {
      "post": {
        "tags": [],
        "summary": "discardClaimUsingPOST",
        "operationId": "discardClaimUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "claimLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "deprecated": false
      }
    },
    "/claim/{claimLocator}/update": {
      "post": {
        "tags": [],
        "summary": "updateClaim3UsingPOST",
        "operationId": "updateClaim3UsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "claimLocator",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "updateRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Claim3UpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Claim3Response"
            }
          }
        },
        "deprecated": false
      }
    },
    "/claims": {
      "get": {
        "tags": [
          "Claims"
        ],
        "summary": "listClaimsUsingGET",
        "operationId": "listClaimsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "createdAfterTimestamp",
            "required": false,
            "type": "integer",
            "description": "Created after time-stamp."
          },
          {
            "in": "query",
            "name": "createdBeforeTimestap",
            "required": false,
            "type": "integer",
            "description": "Created before time-stamp."
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer",
            "description": "Page size."
          },
          {
            "in": "query",
            "name": "pagingToken",
            "required": false,
            "type": "string",
            "description": "Paging token."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Claim3PageResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/claims/payables": {
      "post": {
        "tags": [
          "Claims"
        ],
        "summary": "createPayableOnSubClaimUsingPOST",
        "operationId": "createPayableOnSubClaimUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubClaimPayableCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubClaimPayableResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/claims/payables/{payableLocator}": {
      "get": {
        "tags": [
          "Claims"
        ],
        "summary": "getPayableByLocatorUsingGET",
        "operationId": "getPayableByLocatorUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "payableLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubClaimPayableResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/claims/payables/reversals": {
      "post": {
        "tags": [
          "Claims"
        ],
        "summary": "reversePayableOnSubClaimUsingPOST",
        "operationId": "reversePayableOnSubClaimUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "reversalRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubClaimPayableReverseRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubClaimPayableResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/configuration/deployTest": {
      "post": {
        "tags": [],
        "summary": "DeployTestConfigurationUsingPOST",
        "operationId": "DeployTestConfigurationUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "tenantNameSuffix",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "zipFile",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeployTestConfigurationResponse"
            }
          }
        },
        "description": "Deploy a test configuration",
        "consumes": [
          "multipart/form-data"
        ],
        "deprecated": false
      }
    },
    "/dailystats/features": {
      "get": {
        "tags": [],
        "summary": "getFeaturesSummaryUsingGET",
        "operationId": "getFeaturesSummaryUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "locators",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "memoNamespace",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/document/renderPolicyDocument": {
      "post": {
        "tags": [
          "Document"
        ],
        "summary": "renderPolicyDocumentUsingPOST",
        "operationId": "renderPolicyDocumentUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyDocumentRenderRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DocumentRenderResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/endorsements/{endorsementLocator}": {
      "get": {
        "tags": [
          "Endorsements"
        ],
        "summary": "getOneEndorsementByLocatorUsingGET",
        "operationId": "getOneEndorsementByLocatorUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "endorsementLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EndorsementResponse"
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "Endorsements"
        ],
        "summary": "updateEndorsementUsingPATCH",
        "operationId": "updateEndorsementUsingPATCH",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "actionRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EndorsementActionRequest"
            }
          },
          {
            "in": "path",
            "name": "endorsementLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EndorsementResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/endorsements/{endorsementLocator}/automatedUnderwritingResult": {
      "get": {
        "tags": [
          "Endorsements"
        ],
        "summary": "getOneEndorsementAutomatedUnderwritingResultUsingGET",
        "operationId": "getOneEndorsementAutomatedUnderwritingResultUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "endorsementLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AutomatedUnderwritingResultResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/endorsements/{endorsementLocator}/policyWhenIssued": {
      "get": {
        "tags": [
          "Endorsements"
        ],
        "summary": "getPolicyWithAcceptedEndorsementAsIssuedUsingGET",
        "operationId": "getPolicyWithAcceptedEndorsementAsIssuedUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "endorsementLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Policy2Response"
            }
          }
        },
        "deprecated": false
      }
    },
    "/endorsements/{endorsementLocator}/price": {
      "get": {
        "tags": [
          "Endorsements"
        ],
        "summary": "getOneEndorsementPriceChangeUsingGET",
        "operationId": "getOneEndorsementPriceChangeUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "endorsementLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyPriceChangeResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/eventstream/attributedEvents": {
      "get": {
        "tags": [],
        "summary": "getAttributedEventsUsingGET",
        "operationId": "getAttributedEventsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "endTimestamp",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "eventType",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pagingToken",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "startTimestamp",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EventPageResponse"
            }
          }
        },
        "description": "Deliver events with user attribution",
        "deprecated": false
      }
    },
    "/eventstream/events": {
      "get": {
        "tags": [
          "Event stream"
        ],
        "summary": "getEventsUsingGET",
        "operationId": "getEventsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "endTimestamp",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "eventType",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pagingToken",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "startTimestamp",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EventPageResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/gracePeriod/{gracePeriodLocator}": {
      "get": {
        "tags": [
          "Grace period"
        ],
        "summary": "getGracePeriodUsingGET",
        "operationId": "getGracePeriodUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "gracePeriodLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GracePeriodResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/health": {
      "get": {
        "tags": [],
        "summary": "getHealthUsingGET",
        "operationId": "getHealthUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HealthResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/integrations": {
      "get": {
        "tags": [],
        "summary": "getExternalServiceIntegrationsUsingGET",
        "operationId": "getExternalServiceIntegrationsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExternalServiceIntegrationsResponse"
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [],
        "summary": "addExternalServiceIntegrationUsingPOST",
        "operationId": "addExternalServiceIntegrationUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExternalServiceIntegrationAddRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExternalServiceIntegrationsResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/integrations/{integrationName}": {
      "delete": {
        "tags": [],
        "summary": "deleteExternalServiceIntegrationUsingDELETE",
        "operationId": "deleteExternalServiceIntegrationUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "integrationName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExternalServiceIntegrationsResponse"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [],
        "summary": "updateExternalServiceIntegrationUsingPUT",
        "operationId": "updateExternalServiceIntegrationUsingPUT",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "integrationName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExternalServiceIntegrationUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExternalServiceIntegrationsResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/integrations/batchUpdate": {
      "put": {
        "tags": [],
        "summary": "batchUpdateExternalServiceIntegrationsUsingPUT",
        "operationId": "batchUpdateExternalServiceIntegrationsUsingPUT",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExternalServiceIntegrationBatchUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExternalServiceIntegrationsResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/invoice/{invoiceLocator}": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "getInvoiceUsingGET",
        "operationId": "getInvoiceUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "invoiceLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyInvoice2Response"
            }
          }
        },
        "deprecated": false
      }
    },
    "/invoice/{invoiceLocator}/financialTransactions": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "getFinancialTransactionsForInvoiceUsingGET",
        "operationId": "getFinancialTransactionsForInvoiceUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "invoiceLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetInvoiceFinancialTransactionsResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/invoice/{invoiceLocator}/pay": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "payInvoice2UsingPOST",
        "operationId": "payInvoice2UsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "invoiceLocator",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "paymentCreateRequest",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PaymentCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaymentResponse2"
            }
          }
        },
        "deprecated": false
      }
    },
    "/lapse/{lapseLocator}": {
      "get": {
        "tags": [
          "Lapse"
        ],
        "summary": "getLapseByLocatorUsingGET",
        "operationId": "getLapseByLocatorUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "lapseLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LapseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/media": {
      "post": {
        "tags": [
          "Media"
        ],
        "summary": "uploadMedia3UsingPOST",
        "operationId": "uploadMedia3UsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "file",
            "required": true,
            "type": "file"
          },
          {
            "in": "query",
            "name": "fileName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Media"
            }
          }
        },
        "consumes": [
          "multipart/form-data"
        ],
        "deprecated": false
      }
    },
    "/media/{locator}": {
      "get": {
        "tags": [
          "Media"
        ],
        "summary": "getMedia3UsingGET",
        "operationId": "getMedia3UsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "locator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Media"
            }
          }
        },
        "deprecated": false
      }
    },
    "/payments/{paymentLocator}": {
      "get": {
        "tags": [
          "PaymentsReversal"
        ],
        "summary": "getPaymentUsingGET",
        "operationId": "getPaymentUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "paymentLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaymentResponse2"
            }
          }
        },
        "deprecated": false
      }
    },
    "/payments/{paymentLocator}/reverse": {
      "post": {
        "tags": [
          "PaymentsReversal"
        ],
        "summary": "reversePaymentUsingPOST",
        "operationId": "reversePaymentUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "paymentLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaymentResponse2"
            }
          }
        },
        "deprecated": false
      }
    },
    "/policies/{locator}/cancellations": {
      "get": {
        "tags": [
          "Policies"
        ],
        "summary": "listCancellationsUsingGET",
        "operationId": "listCancellationsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "locator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CancellationResponse"
              }
            }
          }
        },
        "description": "\"The returned cancellations will \"+\"have the states: draft, issued, reinstated, or expired\"",
        "deprecated": false
      },
      "post": {
        "tags": [
          "Policies"
        ],
        "summary": "createCancellationUsingPOST",
        "operationId": "createCancellationUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "locator",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "req",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CancellationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CancellationResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/policies/{policyLocator}/endorsements": {
      "get": {
        "tags": [
          "Policies"
        ],
        "summary": "getAllEndorsementsByPolicyLocatorUsingGET",
        "operationId": "getAllEndorsementsByPolicyLocatorUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "policyLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EndorsementResponse"
              }
            }
          }
        },
        "description": "Get all endorsements using policy locator.",
        "deprecated": false
      },
      "post": {
        "tags": [
          "Policies"
        ],
        "summary": "createEndorsementUsingPOST",
        "operationId": "createEndorsementUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "endorsementCreateRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EndorsementCreateRequest"
            }
          },
          {
            "in": "path",
            "name": "policyLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EndorsementResponse"
            }
          }
        },
        "description": "Create an endorsement....",
        "deprecated": false
      }
    },
    "/policies/{policyLocator}/premiumReports": {
      "get": {
        "tags": [
          "Policies"
        ],
        "summary": "getPremiumReportsUsingGET",
        "operationId": "getPremiumReportsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "policyLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PremiumReportResponse"
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Policies"
        ],
        "summary": "createPremiumReportUsingPOST",
        "operationId": "createPremiumReportUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "createRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PremiumReportCreateRequest"
            }
          },
          {
            "in": "path",
            "name": "policyLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PremiumReportResponse"
            }
          }
        },
        "description": "Create an premium-report....",
        "deprecated": false
      }
    },
    "/policies/{policyLocator}/quotes": {
      "get": {
        "tags": [
          "Policies"
        ],
        "summary": "getAllQuotesByPolicyLocatorUsingGET",
        "operationId": "getAllQuotesByPolicyLocatorUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "policyLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PolicyQuoteResponse"
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Policies"
        ],
        "summary": "createNewQuoteByPolicyLocatorUsingPOST",
        "operationId": "createNewQuoteByPolicyLocatorUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "policyLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyQuoteResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/policies/{policyLocator}/renewals": {
      "get": {
        "tags": [
          "Policies"
        ],
        "summary": "getAllRenewalsByPolicyLocatorUsingGET",
        "operationId": "getAllRenewalsByPolicyLocatorUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "policyLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RenewalResponse"
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Policies"
        ],
        "summary": "createRenewalUsingPOST",
        "operationId": "createRenewalUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "policyLocator",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "renewalCreateRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RenewalCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RenewalResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/policies/{policyLocator}/selectedQuote": {
      "get": {
        "tags": [
          "Policies"
        ],
        "summary": "getSelectedQuoteUsingGET",
        "operationId": "getSelectedQuoteUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "policyLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyQuoteResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/policy": {
      "post": {
        "tags": [
          "Policy"
        ],
        "summary": "createPolicyUsingPOST",
        "operationId": "createPolicyUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "createRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyCreateRequest4"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Policy2Response"
            }
          }
        },
        "deprecated": false
      }
    },
    "/policy/{policyLocator}": {
      "get": {
        "tags": [
          "Policy"
        ],
        "summary": "getPolicyUsingGET",
        "operationId": "getPolicyUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "policyLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Policy2Response"
            }
          }
        },
        "deprecated": false
      }
    },
    "/policy/{policyLocator}/addDocument": {
      "post": {
        "tags": [
          "Policy"
        ],
        "summary": "addDocumentUsingPOST",
        "operationId": "addDocumentUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "displayName",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "document",
            "required": true,
            "type": "file"
          },
          {
            "in": "query",
            "name": "documentType",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "policyLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Policy2Response"
            }
          }
        },
        "consumes": [
          "multipart/form-data"
        ],
        "deprecated": false
      }
    },
    "/policy/{policyLocator}/automatedUnderwritingResult": {
      "get": {
        "tags": [
          "Policy"
        ],
        "summary": "getAutomatedUnderwritingResultUsingGET",
        "operationId": "getAutomatedUnderwritingResultUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "policyLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AutomatedUnderwritingResultResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/policy/{policyLocator}/cancel": {
      "post": {
        "tags": [
          "Policy"
        ],
        "summary": "issueCancellationUsingPOST",
        "operationId": "issueCancellationUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "policyLocator",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyCancellationIssueRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Policy2Response"
            }
          }
        },
        "deprecated": false
      }
    },
    "/policy/{policyLocator}/cancellationValue": {
      "get": {
        "tags": [
          "Policy"
        ],
        "summary": "getCancellationValueUsingGET",
        "operationId": "getCancellationValueUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "coverageEndTimestamp",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "policyLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CancellationValueResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/policy/{policyLocator}/checkInvoices": {
      "get": {
        "tags": [
          "Policy"
        ],
        "summary": "checkInvoicesUsingGET",
        "operationId": "checkInvoicesUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "policyLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CheckInvoicesResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/policy/{policyLocator}/claims": {
      "get": {
        "tags": [
          "Policy"
        ],
        "summary": "getClaimsByPolicyUsingGET",
        "operationId": "getClaimsByPolicyUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "policyLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Claim3Response"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/policy/{policyLocator}/createReinstatement": {
      "post": {
        "tags": [
          "Policy"
        ],
        "summary": "createReinstatementUsingPOST",
        "operationId": "createReinstatementUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "policyLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LapseReinstatementResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/policy/{policyLocator}/discard": {
      "post": {
        "tags": [
          "Policy"
        ],
        "summary": "discardPolicyUsingPOST",
        "operationId": "discardPolicyUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "policyLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "deprecated": false
      }
    },
    "/policy/{policyLocator}/endorse": {
      "post": {
        "tags": [
          "Policy"
        ],
        "summary": "issueEndorsementUsingPOST",
        "operationId": "issueEndorsementUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "policyLocator",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyEndorsementIssueRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Policy2Response"
            }
          }
        },
        "deprecated": false
      }
    },
    "/policy/{policyLocator}/finalize": {
      "post": {
        "tags": [
          "Policy"
        ],
        "summary": "finalizePolicyUsingPOST",
        "operationId": "finalizePolicyUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "policyLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Policy2Response"
            }
          }
        },
        "deprecated": false
      }
    },
    "/policy/{policyLocator}/graceLapseReinstatements": {
      "get": {
        "tags": [
          "Policy"
        ],
        "summary": "getGraceLapseReinstatementsUsingGET",
        "operationId": "getGraceLapseReinstatementsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "policyLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GraceLapseReinstatementResponse"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/policy/{policyLocator}/gracePeriods": {
      "get": {
        "tags": [
          "Policy"
        ],
        "summary": "getGracePeriodsByPolicyUsingGET",
        "operationId": "getGracePeriodsByPolicyUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "policyLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GracePeriodResponse"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/policy/{policyLocator}/issue": {
      "post": {
        "tags": [
          "Policy"
        ],
        "summary": "issuePolicyUsingPOST",
        "operationId": "issuePolicyUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "policyLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Policy2Response"
            }
          }
        },
        "deprecated": false
      }
    },
    "/policy/{policyLocator}/issueNextInvoice": {
      "post": {
        "tags": [
          "Policy"
        ],
        "summary": "issueNextInvoiceUsingPOST",
        "operationId": "issueNextInvoiceUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "policyLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Policy2Response"
            }
          }
        },
        "deprecated": false
      }
    },
    "/policy/{policyLocator}/issueRenewal": {
      "post": {
        "tags": [
          "Policy"
        ],
        "summary": "issueRenewalUsingPOST",
        "operationId": "issueRenewalUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "policyLocator",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RenewalIssueRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Policy2Response"
            }
          }
        },
        "deprecated": false
      }
    },
    "/policy/{policyLocator}/previewEndorsementPrice": {
      "post": {
        "tags": [
          "Policy"
        ],
        "summary": "previewEndorsementPriceUsingPOST",
        "operationId": "previewEndorsementPriceUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "policyLocator",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyEndorsementIssueRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyPriceChangeResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/policy/{policyLocator}/previewRenewalPrice": {
      "post": {
        "tags": [
          "Policy"
        ],
        "summary": "previewRenewalPriceUsingPOST",
        "operationId": "previewRenewalPriceUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "policyLocator",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RenewalIssueRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyPriceChangeResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/policy/{policyLocator}/price": {
      "get": {
        "tags": [
          "Policy"
        ],
        "summary": "getPolicyPriceUsingGET",
        "operationId": "getPolicyPriceUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "policyLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetPolicyPriceResponse"
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Policy"
        ],
        "summary": "pricePolicyUsingPOST",
        "operationId": "pricePolicyUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "policyLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyPriceResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/policy/{policyLocator}/reinstatements": {
      "get": {
        "tags": [
          "Policy"
        ],
        "summary": "getReinstatementsUsingGET",
        "operationId": "getReinstatementsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "policyLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LapseReinstatementResponse"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/policy/{policyLocator}/removeDocument": {
      "post": {
        "tags": [
          "Policy"
        ],
        "summary": "removeDocumentUsingPOST",
        "operationId": "removeDocumentUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "policyLocator",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyDocumentRemoveRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Policy2Response"
            }
          }
        },
        "deprecated": false
      }
    },
    "/policy/{policyLocator}/true/grace": {
      "get": {
        "tags": [
          "Policy"
        ],
        "summary": "getNonSettledGraceUsingGET",
        "operationId": "getNonSettledGraceUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "policyLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GracePeriodResponse"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/policy/{policyLocator}/update": {
      "post": {
        "tags": [
          "Policy"
        ],
        "summary": "updatePolicyUsingPOST",
        "operationId": "updatePolicyUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "policyLocator",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "updateRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Policy2UpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Policy2Response"
            }
          }
        },
        "deprecated": false
      }
    },
    "/policy/{policyLocator}/withdraw": {
      "post": {
        "tags": [
          "Policy"
        ],
        "summary": "issueWithdrawalUsingPOST",
        "operationId": "issueWithdrawalUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "policyLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Policy2Response"
            }
          }
        },
        "deprecated": false
      }
    },
    "/policy/locator": {
      "get": {
        "tags": [
          "Policy"
        ],
        "summary": "getPolicyLocatorUsingGET",
        "operationId": "getPolicyLocatorUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "displayId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        },
        "deprecated": true
      }
    },
    "/policyholder/{policyholderLocator}": {
      "get": {
        "tags": [
          "Policyholder"
        ],
        "summary": "getPolicyholder4UsingGET",
        "operationId": "getPolicyholder4UsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "policyholderLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyholderResponse3"
            }
          }
        },
        "deprecated": false
      }
    },
    "/policyholder/{policyholderLocator}/invoices": {
      "get": {
        "tags": [
          "Policyholder"
        ],
        "summary": "getInvoicesForPolicyholder4UsingGET",
        "operationId": "getInvoicesForPolicyholder4UsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "policyholderLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PolicyInvoice2Response"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/policyholder/{policyholderLocator}/policies": {
      "get": {
        "tags": [
          "Policyholder"
        ],
        "summary": "getPoliciesForPolicyholder4UsingGET",
        "operationId": "getPoliciesForPolicyholder4UsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "policyholderLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Policy2Response"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/policyholder/create": {
      "post": {
        "tags": [
          "Policyholder"
        ],
        "summary": "createPolicyholder4UsingPOST",
        "operationId": "createPolicyholder4UsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyholderCreateRequest2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyholderResponse3"
            }
          }
        },
        "deprecated": false
      }
    },
    "/policyholder/update": {
      "post": {
        "tags": [
          "Policyholder"
        ],
        "summary": "updatePolicyholder4UsingPOST",
        "operationId": "updatePolicyholder4UsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "updateRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyholderUpdateRequest2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyholderResponse3"
            }
          }
        },
        "deprecated": false
      }
    },
    "/policyholder/v2/{policyholderLocator}": {
      "get": {
        "tags": [],
        "summary": "getPolicyholder3UsingGET",
        "operationId": "getPolicyholder3UsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "policyholderLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyholderResponse3"
            }
          }
        },
        "deprecated": false
      }
    },
    "/policyholder/v2/{policyholderLocator}/invoices": {
      "get": {
        "tags": [
          "Policyholder"
        ],
        "summary": "getInvoicesForPolicyholderUsingGET",
        "operationId": "getInvoicesForPolicyholderUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "policyholderLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PolicyInvoice2Response"
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/policyholder/v2/{policyholderLocator}/policies": {
      "get": {
        "tags": [
          "Policyholder"
        ],
        "summary": "getPoliciesForPolicyholderUsingGET",
        "operationId": "getPoliciesForPolicyholderUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "policyholderLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Policy2Response"
              }
            }
          }
        },
        "description": "These are some notes to test the note function",
        "deprecated": true
      }
    },
    "/policyholder/v2/create": {
      "post": {
        "tags": [],
        "summary": "createPolicyholder3UsingPOST",
        "operationId": "createPolicyholder3UsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyholderCreateRequest2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyholderResponse3"
            }
          }
        },
        "deprecated": false
      }
    },
    "/policyholder/v2/update": {
      "post": {
        "tags": [],
        "summary": "updatePolicyholder3UsingPOST",
        "operationId": "updatePolicyholder3UsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "updateRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyholderUpdateRequest2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyholderResponse3"
            }
          }
        },
        "deprecated": false
      }
    },
    "/policyholders": {
      "get": {
        "tags": [
          "Policyholders"
        ],
        "summary": "getPolicyholdersUsingGET",
        "operationId": "getPolicyholdersUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "createdAfterTimestamp",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "createdBeforeTimestamp",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pagingToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Policyholder3PageResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/premiumReports/{premiumReportLocator}": {
      "get": {
        "tags": [
          "PremiumReport"
        ],
        "summary": "getPremiumReportUsingGET",
        "operationId": "getPremiumReportUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "premiumReportLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PremiumReportResponse"
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "PremiumReport"
        ],
        "summary": "updatePremiumReportUsingPATCH",
        "operationId": "updatePremiumReportUsingPATCH",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "premiumReportLocator",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "updateRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PremiumReportUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PremiumReportResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/premiumReports/{premiumReportLocator}/discard": {
      "patch": {
        "tags": [
          "PremiumReport"
        ],
        "summary": "discardPremiumReportUsingPATCH",
        "operationId": "discardPremiumReportUsingPATCH",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "premiumReportLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "deprecated": false
      }
    },
    "/premiumReports/{premiumReportLocator}/issue": {
      "patch": {
        "tags": [
          "PremiumReport"
        ],
        "summary": "issuePremiumReportUsingPATCH",
        "operationId": "issuePremiumReportUsingPATCH",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "premiumReportLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PremiumReportResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/products/[\"/{configVersion}\" | \"\"]": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "getProductsUsingGET",
        "operationId": "getProductsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "configVersion",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductConfiguration2Response"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/quotes/{quoteLocator}": {
      "get": {
        "tags": [
          "Quotes"
        ],
        "summary": "getPolicyQuoteByLocatorUsingGET",
        "operationId": "getPolicyQuoteByLocatorUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "quoteLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyQuoteResponse"
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "Quotes"
        ],
        "summary": "updateQuoteUsingPATCH",
        "operationId": "updateQuoteUsingPATCH",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "quoteLocator",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "updateRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyQuoteUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyQuoteResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/quotes/{quoteLocator}/accept": {
      "patch": {
        "tags": [
          "Quotes"
        ],
        "summary": "acceptPolicyQuoteUsingPATCH",
        "operationId": "acceptPolicyQuoteUsingPATCH",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "quoteLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyQuoteResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/quotes/{quoteLocator}/createNew": {
      "post": {
        "tags": [
          "Quotes"
        ],
        "summary": "createQuoteFromExistingUsingPOST",
        "operationId": "createQuoteFromExistingUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "addedChanges",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PolicyQuoteUpdateRequest"
            }
          },
          {
            "in": "path",
            "name": "quoteLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyQuoteResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/quotes/{quoteLocator}/discard": {
      "patch": {
        "tags": [
          "Quotes"
        ],
        "summary": "discardPolicyQuoteUsingPATCH",
        "operationId": "discardPolicyQuoteUsingPATCH",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "quoteLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyQuoteResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/quotes/{quoteLocator}/invalidate": {
      "patch": {
        "tags": [
          "Quotes"
        ],
        "summary": "invalidatePolicyQuoteUsingPATCH",
        "operationId": "invalidatePolicyQuoteUsingPATCH",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "quoteLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyQuoteResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/quotes/{quoteLocator}/price": {
      "get": {
        "tags": [
          "Quotes"
        ],
        "summary": "fetchPolicyQuotePriceUsingGET",
        "operationId": "fetchPolicyQuotePriceUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "quoteLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyPriceResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/quotes/{quoteLocator}/select": {
      "patch": {
        "tags": [
          "Quotes"
        ],
        "summary": "selectPolicyQuoteUsingPATCH",
        "operationId": "selectPolicyQuoteUsingPATCH",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "quoteLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "deprecated": false
      }
    },
    "/reinstatement/{reinstatementLocator}": {
      "get": {
        "tags": [
          "Reinstatement"
        ],
        "summary": "getReinstatementByLocatorUsingGET",
        "operationId": "getReinstatementByLocatorUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "reinstatementLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LapseReinstatementResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/reinstatement/{reinstatementLocator}/addDocument": {
      "post": {
        "tags": [
          "Reinstatement"
        ],
        "summary": "addDocumentToReinstatementUsingPOST",
        "operationId": "addDocumentToReinstatementUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "displayName",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "document",
            "required": true,
            "type": "file"
          },
          {
            "in": "query",
            "name": "documentType",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "reinstatementLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LapseReinstatementResponse"
            }
          }
        },
        "consumes": [
          "multipart/form-data"
        ],
        "deprecated": false
      }
    },
    "/reinstatement/{reinstatementLocator}/amountDue": {
      "post": {
        "tags": [
          "Reinstatement"
        ],
        "summary": "getReinstatementAmountDueUsingPOST",
        "operationId": "getReinstatementAmountDueUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "reinstatementLocator",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReinstatementAmountDueRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReinstatementAmountDueResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/reinstatement/{reinstatementLocator}/close": {
      "post": {
        "tags": [
          "Reinstatement"
        ],
        "summary": "closeReinstatementUsingPOST",
        "operationId": "closeReinstatementUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "reinstatementLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LapseReinstatementResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/reinstatement/{reinstatementLocator}/invoice": {
      "post": {
        "tags": [
          "Reinstatement"
        ],
        "summary": "invoiceReinstatementUsingPOST",
        "operationId": "invoiceReinstatementUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "reinstatementLocator",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReinstatementInvoiceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LapseReinstatementResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/reinstatement/{reinstatementLocator}/removeDocument": {
      "post": {
        "tags": [
          "Reinstatement"
        ],
        "summary": "removeDocumentFromReinstatementUsingPOST",
        "operationId": "removeDocumentFromReinstatementUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "reinstatementLocator",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReinstatementDocumentRemoveRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LapseReinstatementResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/reinstatements/{locator}": {
      "get": {
        "tags": [
          "Reinstatements"
        ],
        "summary": "getReinstatementUsingGET",
        "operationId": "getReinstatementUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "locator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReinstatementResponse"
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "Reinstatements"
        ],
        "summary": "updateReinstatementUsingPATCH",
        "operationId": "updateReinstatementUsingPATCH",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "locator",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "req",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReinstatementUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReinstatementResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/reinstatements/{locator}/accept": {
      "patch": {
        "tags": [
          "Reinstatements"
        ],
        "summary": "acceptReinstatementUsingPATCH",
        "operationId": "acceptReinstatementUsingPATCH",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "locator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReinstatementResponse"
            }
          }
        },
        "description": "This operation acts on reinstatements in the draft state",
        "deprecated": false
      }
    },
    "/reinstatements/{locator}/invalidate": {
      "patch": {
        "tags": [
          "Reinstatements"
        ],
        "summary": "invalidateReinstatementUsingPATCH",
        "operationId": "invalidateReinstatementUsingPATCH",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "locator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReinstatementResponse"
            }
          }
        },
        "description": "\"This operation acts on reinstatements in the accept state, and reverts them to the  \"+\"draft state, deleting any generated documents and invoices.\"",
        "deprecated": false
      }
    },
    "/reinstatements/{locator}/issue": {
      "patch": {
        "tags": [
          "Reinstatements"
        ],
        "summary": "issueReinstatementUsingPATCH",
        "operationId": "issueReinstatementUsingPATCH",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "locator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReinstatementResponse"
            }
          }
        },
        "description": "This operation acts on reinstatements in the accept state. ",
        "deprecated": false
      }
    },
    "/reinstatements/{locator}/price": {
      "get": {
        "tags": [
          "Reinstatements"
        ],
        "summary": "priceReinstatementUsingGET",
        "operationId": "priceReinstatementUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "locator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyPriceChangeResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/renewals/{renewalLocator}": {
      "get": {
        "tags": [
          "Renewals"
        ],
        "summary": "getOneRenewalByLocatorUsingGET",
        "operationId": "getOneRenewalByLocatorUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "renewalLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RenewalResponse"
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "Renewals"
        ],
        "summary": "updateRenewalUsingPATCH",
        "operationId": "updateRenewalUsingPATCH",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "actionRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RenewalActionRequest"
            }
          },
          {
            "in": "path",
            "name": "renewalLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RenewalResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/renewals/{renewalLocator}/automatedUnderwritingResult": {
      "get": {
        "tags": [
          "Renewals"
        ],
        "summary": "getOneRenewalAutomatedUnderwritingResultUsingGET",
        "operationId": "getOneRenewalAutomatedUnderwritingResultUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "renewalLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AutomatedUnderwritingResultResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/renewals/{renewalLocator}/policyWhenIssued": {
      "get": {
        "tags": [
          "Renewals"
        ],
        "summary": "getPolicyWithAcceptedRenewalAsIssuedUsingGET",
        "operationId": "getPolicyWithAcceptedRenewalAsIssuedUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "renewalLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Policy2Response"
            }
          }
        },
        "deprecated": false
      }
    },
    "/renewals/{renewalLocator}/price": {
      "get": {
        "tags": [
          "Renewals"
        ],
        "summary": "getOneRenewalPriceChangeUsingGET",
        "operationId": "getOneRenewalPriceChangeUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "renewalLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyPriceChangeResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/report/{reportLocator}/status": {
      "get": {
        "tags": [
          "Report"
        ],
        "summary": "getReportStatusUsingGET",
        "operationId": "getReportStatusUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "reportLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReportStatusResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/report/allPolicies": {
      "post": {
        "tags": [
          "Report"
        ],
        "summary": "runAllPoliciesReportAsyncUsingPOST",
        "operationId": "runAllPoliciesReportAsyncUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyReportRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RunReportResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/report/allPoliciesPreview": {
      "post": {
        "tags": [
          "Report"
        ],
        "summary": "runAllPolciesReportPreviewUsingPOST",
        "operationId": "runAllPolciesReportPreviewUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyReportRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReportPreviewResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/report/allPoliciesSynchronous": {
      "post": {
        "tags": [
          "Report"
        ],
        "summary": "runAllPoliciesReportUsingPOST",
        "operationId": "runAllPoliciesReportUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyReportRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReportResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/report/claim": {
      "post": {
        "tags": [
          "Report"
        ],
        "summary": "runClaimsReportUsingPOST",
        "operationId": "runClaimsReportUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClaimsReportRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RunReportResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/report/claim/payables": {
      "post": {
        "tags": [
          "Report"
        ],
        "summary": "runClaimsPayablesReportUsingPOST",
        "operationId": "runClaimsPayablesReportUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClaimsPayablesReportRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RunReportResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/report/claim/payables/preview": {
      "post": {
        "tags": [
          "Report"
        ],
        "summary": "runClaimsPayablesReportPreviewUsingPOST",
        "operationId": "runClaimsPayablesReportPreviewUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClaimsPayablesReportRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReportPreviewResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/report/claim/preview": {
      "post": {
        "tags": [
          "Report"
        ],
        "summary": "runClaimsReportPreviewUsingPOST",
        "operationId": "runClaimsReportPreviewUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClaimsReportRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReportPreviewResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/report/claim/reserves": {
      "post": {
        "tags": [
          "Report"
        ],
        "summary": "runReservesReportUsingPOST",
        "operationId": "runReservesReportUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReservesReportRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RunReportResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/report/claim/reserves/preview": {
      "post": {
        "tags": [
          "Report"
        ],
        "summary": "runReservesReportPreviewUsingPOST",
        "operationId": "runReservesReportPreviewUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReservesReportRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReportPreviewResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/report/financialTransaction": {
      "post": {
        "tags": [
          "Report"
        ],
        "summary": "runFinancialTransactionReportUsingPOST",
        "operationId": "runFinancialTransactionReportUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FinancialTransactionReportRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RunReportResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/report/financialTransactionPreview": {
      "post": {
        "tags": [
          "Report"
        ],
        "summary": "runFinancialTransactionReportPreviewUsingPOST",
        "operationId": "runFinancialTransactionReportPreviewUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FinancialTransactionReportRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReportPreviewResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/report/onRisk": {
      "post": {
        "tags": [
          "Report"
        ],
        "summary": "runOnRiskReportAsyncUsingPOST",
        "operationId": "runOnRiskReportAsyncUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyReportRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RunReportResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/report/onRiskPreview": {
      "post": {
        "tags": [
          "Report"
        ],
        "summary": "runOnRiskReportPreviewUsingPOST",
        "operationId": "runOnRiskReportPreviewUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyReportRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReportPreviewResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/report/onRiskSynchronous": {
      "post": {
        "tags": [
          "Report"
        ],
        "summary": "runOnRiskReportUsingPOST",
        "operationId": "runOnRiskReportUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyReportRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReportResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/report/paidFinancialTransaction": {
      "post": {
        "tags": [
          "Report"
        ],
        "summary": "runPaidFinancialTransactionReportUsingPOST",
        "operationId": "runPaidFinancialTransactionReportUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FinancialTransactionReportRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RunReportResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/report/paidFinancialTransactionPreview": {
      "post": {
        "tags": [
          "Report"
        ],
        "summary": "runPaidFinancialTransactionReportPreviewUsingPOST",
        "operationId": "runPaidFinancialTransactionReportPreviewUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FinancialTransactionReportRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReportPreviewResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/report/payableCommissions": {
      "post": {
        "tags": [
          "Report"
        ],
        "summary": "runPayableCommissionsReportUsingPOST",
        "operationId": "runPayableCommissionsReportUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PayableCommissionsReportRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RunReportResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/report/payableCommissions/preview": {
      "post": {
        "tags": [
          "Report"
        ],
        "summary": "runPayableCommissionsReportPreviewUsingPOST",
        "operationId": "runPayableCommissionsReportPreviewUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PayableCommissionsReportRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReportPreviewResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/report/unearnedPremium/accountsReceivable": {
      "post": {
        "tags": [
          "Report"
        ],
        "summary": "runUnearnedPremiumAccountsReceivableReportUsingPOST",
        "operationId": "runUnearnedPremiumAccountsReceivableReportUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UnearnedPremiumReportRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RunReportResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/report/unearnedPremium/accountsReceivable/preview": {
      "post": {
        "tags": [
          "Report"
        ],
        "summary": "runUnearnedPremiumAccountsReceivableReportPreviewUsingPOST",
        "operationId": "runUnearnedPremiumAccountsReceivableReportPreviewUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UnearnedPremiumReportRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReportPreviewResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/scripts/deploy": {
      "post": {
        "tags": [],
        "summary": "deployScriptsUsingPOST",
        "operationId": "deployScriptsUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "file",
            "required": true,
            "type": "file"
          },
          {
            "in": "query",
            "name": "tenantLocator",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "The operation accepts zip archive, which contains Java Script files. Multipart form with file parameter is expected.",
        "consumes": [
          "multipart/form-data"
        ],
        "deprecated": false
      }
    },
    "/scripts/queryLogs": {
      "post": {
        "tags": [],
        "summary": "queryUsingPOST",
        "operationId": "queryUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryRequest"
            }
          },
          {
            "in": "query",
            "name": "tenantLocator",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QueryResponse"
            }
          }
        },
        "description": "The POST body contains JSON with parameters for retrieving scripting logs.",
        "deprecated": false
      }
    },
    "/subClaim/{subClaimLocator}/payables": {
      "get": {
        "tags": [],
        "summary": "getPayablesOfSubClaimUsingGET",
        "operationId": "getPayablesOfSubClaimUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subClaimLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubClaimPayableListsResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subClaim/{subClaimLocator}/reserveHistory": {
      "get": {
        "tags": [],
        "summary": "getReserveHistoryUsingGET",
        "operationId": "getReserveHistoryUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subClaimLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReserveHistoryResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subClaim/{subClaimLocator}/reserves": {
      "get": {
        "tags": [],
        "summary": "getReservesOfSubClaimUsingGET",
        "operationId": "getReservesOfSubClaimUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subClaimLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReserveHistoryResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subClaim/{subClaimLocator}/summary": {
      "get": {
        "tags": [],
        "summary": "getSummaryOfSubClaimUsingGET",
        "operationId": "getSummaryOfSubClaimUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subClaimLocator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubClaimSummary"
            }
          }
        },
        "deprecated": false
      }
    },
    "/tenantassets/v1/custom": {
      "post": {
        "tags": [
          "Storage / Customization"
        ],
        "summary": "addCustomWebAssetsUsingPOST",
        "operationId": "addCustomWebAssetsUsingPOST",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "file",
            "required": true,
            "type": "file",
            "description": "\"\"+\"A web resource file, uploaded as a multipart-encoded file. The API user should \"+\"explicitly set the 'filename' parameter of the uploaded file to one of the \"+\"accepted file names. Currently the accepted file names are 'styles.css' \"+\"or logo.png.\""
          },
          {
            "in": "query",
            "name": "hostname",
            "required": true,
            "type": "string",
            "description": "\"The hostname for which the user \"+\"would like the web resource files to be available. This value should not contain \"+\"protocol or path elements.\""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TenantAssetsResponse"
            }
          }
        },
        "description": "\"This API endpoint \"+\"allows users to upload custom web files to the Socotra systems. These custom \"+\"web files are used by Socotra's policy management application, and allow users \"+\"the ability to modify the policy management display. The credentials used to upload the file should \"+\"be those of a user who has account.tenant.admin permissions. Example code for the upload \"+\"can be obtained from your account representative.\"",
        "consumes": [
          "multipart/form-data"
        ],
        "deprecated": false
      }
    }
  },
  "definitions": {
    "AccountAddRequest": {
      "type": "object",
      "required": [
        "email",
        "name",
        "password",
        "type",
        "username"
      ],
      "properties": {
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "AccountPagedResultResponse": {
      "type": "object",
      "required": [
        "resultsPage"
      ],
      "properties": {
        "cursor": {
          "type": "string"
        },
        "resultsPage": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountResponse"
          }
        }
      }
    },
    "AccountPasswordRequest": {
      "type": "object",
      "required": [
        "password"
      ],
      "properties": {
        "password": {
          "type": "string"
        }
      }
    },
    "AccountResponse": {
      "type": "object",
      "required": [
        "accountType",
        "createdTimestamp",
        "deleted",
        "email",
        "id",
        "name",
        "tenant",
        "username"
      ],
      "properties": {
        "accountType": {
          "type": "string",
          "enum": [
            "account.internal",
            "account.tenant.admin",
            "account.tenant.employee",
            "account.tenant.read.only.user",
            "account.tenant.claims.only.user",
            "account.unauthenticated",
            "account.test.tenant.admin"
          ]
        },
        "createdTimestamp": {
          "type": "timestamp"
        },
        "deleted": {
          "type": "boolean"
        },
        "email": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "tenant": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "AccountStatusRequest": {
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "0",
            "1"
          ]
        }
      }
    },
    "AccountUnlockRequest": {
      "type": "object",
      "required": [
        "username"
      ],
      "properties": {
        "hostName": {
          "type": "string"
        },
        "tenantName": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "AccountUpdateRequest": {
      "type": "object",
      "required": [
        "email",
        "name",
        "username"
      ],
      "properties": {
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "AuthenticateRequest3": {
      "type": "object",
      "required": [
        "password",
        "username"
      ],
      "properties": {
        "hostName": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "tenantName": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "AuthenticateResponse3": {
      "type": "object",
      "required": [
        "authorizationToken",
        "expiresTimestamp"
      ],
      "properties": {
        "authorizationToken": {
          "type": "string"
        },
        "expiresTimestamp": {
          "type": "timestamp"
        }
      }
    },
    "AutomatedUnderwritingResultResponse": {
      "type": "object",
      "required": [
        "decision",
        "decisionTimestamp",
        "notes"
      ],
      "properties": {
        "decision": {
          "type": "string",
          "enum": [
            "accept",
            "reject",
            "none"
          ]
        },
        "decisionTimestamp": {
          "type": "timestamp"
        },
        "notes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CalculatedCommission": {
      "type": "object",
      "required": [
        "amount",
        "recipient"
      ],
      "properties": {
        "amount": {
          "type": "string"
        },
        "recipient": {
          "type": "string"
        }
      }
    },
    "CalculationResponse": {
      "type": "object",
      "required": [
        "assignedVariables",
        "commissions",
        "premium"
      ],
      "properties": {
        "assignedVariables": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "commissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommissionResponse"
          }
        },
        "premium": {
          "type": "number"
        },
        "technicalPremium": {
          "type": "number"
        }
      }
    },
    "CancellationConfigurationResponse": {
      "type": "object",
      "required": [],
      "properties": {
        "reasons": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CancellationReasonConfigurationResponse"
          }
        }
      }
    },
    "CancellationInfo": {
      "type": "object",
      "required": [
        "effectiveTimestamp",
        "modificationLocator",
        "modificationName"
      ],
      "properties": {
        "effectiveTimestamp": {
          "type": "timestamp"
        },
        "modificationLocator": {
          "type": "string"
        },
        "modificationName": {
          "type": "string"
        }
      }
    },
    "CancellationReasonConfigurationResponse": {
      "type": "object",
      "required": [
        "documents",
        "name",
        "title"
      ],
      "properties": {
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyDocumentConfiguration"
          }
        },
        "name": {
          "type": "string"
        },
        "reinstatement": {
          "$ref": "#/definitions/ReinstatementConfigurationResponse"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "CancellationRequest": {
      "type": "object",
      "required": [
        "effectiveTimestamp",
        "name"
      ],
      "properties": {
        "conflictHandling": {
          "type": "string",
          "enum": [
            "block",
            "invalidate"
          ],
          "description": "\"The conflict handling parameter specifies what the system should do if one tries to \"+\"issue a cancellation when another modification (endorsement, renewal, or reinstatement) is in the accepted \"+\"state, waiting to be issued. If such a situation exists and the conflict handling parameter is 'block' \"+\"then the issue request will fail with a validation error. If the conflict handling parameter is \"+\"'invalidate' then the existing, accepted modification will be invalidated, returning it to a draft state \"+\"and removing any of its generated documents and invoices. If this parameter is not set then the \"+\"conflict handling will default to 'block'.\""
        },
        "effectiveTimestamp": {
          "type": "timestamp",
          "description": "\"The time at which the cancellation should begin, as a unix timestamp. This will be a value \"+\"that is within \"+\"the range [policy.start_timestamp, policy.end_timestamp). The cancellation will then range from this \"+\"date until the end of the policy.\""
        },
        "issue": {
          "type": "boolean",
          "description": "\"This parameter specifies whether to create a cancellation in the draft state (false) or to \"+\"both create the cancellation and immediately issue it (true). If this parameter is not specified then \"+\"it defaults to false.\""
        },
        "name": {
          "type": "string",
          "description": "\"The cancellation type, or reason, for the cancellation. The cancellations types are \"+\"be defined in your tenant configuration's cancellations.json file. This value must be one of those \"+\"defined values or the system defined value 'lapse'.\""
        }
      }
    },
    "CancellationResponse": {
      "type": "object",
      "required": [
        "conflictHandling",
        "createdTimestamp",
        "documents",
        "effectiveTimestamp",
        "locator",
        "name",
        "policyLocator",
        "policyModificationLocator",
        "state",
        "title"
      ],
      "properties": {
        "conflictHandling": {
          "type": "string",
          "enum": [
            "block",
            "invalidate"
          ],
          "description": "\"A value which dictates how issuing a cancellation behaves when a policy has pending \"+\"modifications in the accept state. If the value is 'block' then issue events fail when there are \"+\"pending modifications. If the value is 'invalidate' then pending modifications are invalidated and \"+\"the cancellation is issued.\""
        },
        "createdTimestamp": {
          "type": "timestamp",
          "description": "The unix timestamp of when the cancellation was created"
        },
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyDocumentResponse",
            "description": "The documents generated by the cancellation on issue"
          }
        },
        "effectiveTimestamp": {
          "type": "timestamp",
          "description": "\"The unix timestamp for the start of the cancellation. When the cancellation is issued \"+\"this timestamp becomes the policy's end timestamp\""
        },
        "invoiceLocator": {
          "type": "string",
          "description": "\"The invoice generated on issue. If the cancellation has not been issued yet then this\"+\"field will not be returned\""
        },
        "issuedTimestamp": {
          "type": "timestamp",
          "description": "The unix timestamp representing when the cancellation was issued"
        },
        "locator": {
          "type": "string",
          "description": "A unique identifier associated with the cancellation"
        },
        "name": {
          "type": "string",
          "description": "\"The name represents a cancellation reason. These names are configured in the \"+\"configuration file, cancellations.json, for the product.\""
        },
        "policyLocator": {
          "type": "string",
          "description": "The unique identifier of the cancellation's policy"
        },
        "policyModificationLocator": {
          "type": "string",
          "description": "A unique identifier cancellation's policy modification"
        },
        "price": {
          "$ref": "#/definitions/PolicyPriceChangeResponse",
          "description": "\"Price change information associated with the cancellation. This field will be \"+\"available when single cancellation objects are returned from the API. The field may be available \"+\"when lists of cancellations are returned from the API or when the cancellation is embedded in a \"+\"parent object\""
        },
        "reinstatement": {
          "$ref": "#/definitions/ReinstatementResponse",
          "description": "The reinstatement which reinstates this cancellation"
        },
        "state": {
          "type": "string",
          "enum": [
            "draft",
            "issued",
            "rescinded",
            "reinstated"
          ],
          "description": "The current state of the cancelllation"
        },
        "title": {
          "type": "string",
          "description": "\"The UI display string for the name, above. This value is configured in the \"+\"configuration file, cancellations.json, for the product.\""
        }
      }
    },
    "CancellationUpdateRequest": {
      "type": "object",
      "required": [],
      "properties": {
        "conflictHandling": {
          "type": "string",
          "enum": [
            "block",
            "invalidate"
          ],
          "description": "\"The conflict handling parameter specifies what the system should do if one tries to \"+\"issue a cancellation when another modification (endorsement, renewal, or reinstatement) is in the accepted \"+\"state, waiting to be issued. If such a situation exists and the conflict handling parameter is 'block' \"+\"then the issue request will fail with a validation error. If the conflict handling parameter is \"+\"'invalidate' then the existing, accepted modification will be invalidated, returning it to a draft state \"+\"and removing any of its generated documents and invoices.\""
        },
        "effectiveTimestamp": {
          "type": "timestamp",
          "description": "\"The time at which the cancellation should begin, as a unix timestamp. This will be a value \"+\"that is within \"+\"the range [policy.start_timestamp, policy.end_timestamp). The cancellation will then range from this \"+\"date until the end of the policy.\""
        },
        "name": {
          "type": "string",
          "description": "\"The cancellation type, or reason, for the cancellation. The cancellations types are \"+\"be defined in your tenant configuration's cancellations.json file. This value must be one of those \"+\"defined values or the system defined value 'lapse'.\""
        }
      }
    },
    "CancellationValueResponse": {
      "type": "object",
      "required": [
        "balanceAfterCancellation",
        "commissions",
        "exposurePrices",
        "grossCommissionsChange",
        "grossFeesChange",
        "grossPremiumChange",
        "grossTaxesChange",
        "newGrossCommissions",
        "newGrossFees",
        "newGrossPremium",
        "newGrossTaxes",
        "newTotal",
        "taxGroups",
        "totalChange",
        "value"
      ],
      "properties": {
        "balanceAfterCancellation": {
          "type": "number"
        },
        "commissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommissionChangeResponse"
          }
        },
        "exposurePrices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExposurePriceChangeResponse"
          }
        },
        "grossCommissionsChange": {
          "type": "number"
        },
        "grossFeesChange": {
          "type": "number"
        },
        "grossPremiumChange": {
          "type": "number"
        },
        "grossTaxesChange": {
          "type": "number"
        },
        "newGrossCommissions": {
          "type": "number"
        },
        "newGrossFees": {
          "type": "number"
        },
        "newGrossPremium": {
          "type": "number"
        },
        "newGrossTaxes": {
          "type": "number"
        },
        "newTotal": {
          "type": "number"
        },
        "taxGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxChangeResponse"
          }
        },
        "totalChange": {
          "type": "number"
        },
        "value": {
          "type": "number"
        }
      }
    },
    "CheckExistingPerilPremiumRequest": {
      "type": "object",
      "required": [
        "calculation",
        "perilDisplayId"
      ],
      "properties": {
        "calculation": {
          "type": "string"
        },
        "perilDisplayId": {
          "type": "string"
        }
      }
    },
    "CheckInvoicesResponse": {
      "type": "object",
      "required": [
        "futureInvoices",
        "generatedInvoices"
      ],
      "properties": {
        "futureInvoices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FutureInvoiceResponse"
          }
        },
        "generatedInvoices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GeneratedInvoiceResponse"
          }
        }
      }
    },
    "CheckPerilPremiumRequest": {
      "type": "object",
      "required": [
        "calculation",
        "exposureCharacteristics",
        "exposureName",
        "perilCharacteristics",
        "perilName",
        "policyCharacteristics",
        "productName"
      ],
      "properties": {
        "calculation": {
          "type": "string"
        },
        "exposureCharacteristics": {
          "$ref": "#/definitions/ExposureCharacteristicsPriceRequest"
        },
        "exposureName": {
          "type": "string"
        },
        "perilCharacteristics": {
          "$ref": "#/definitions/PerilCharacteristicsPriceRequest"
        },
        "perilName": {
          "type": "string"
        },
        "policyCharacteristics": {
          "$ref": "#/definitions/PolicyCharacteristicsPriceRequest"
        },
        "productName": {
          "type": "string"
        }
      }
    },
    "Claim3CreateRequest": {
      "type": "object",
      "required": [
        "policyLocator"
      ],
      "properties": {
        "fieldGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldGroupCreateRequest"
          }
        },
        "fieldValues": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "incidentTimestamp": {
          "type": "timestamp"
        },
        "notificationTimestamp": {
          "type": "timestamp"
        },
        "policyLocator": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "pending",
            "open"
          ]
        }
      }
    },
    "Claim3PageResponse": {
      "type": "object",
      "required": [
        "claims"
      ],
      "properties": {
        "claims": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Claim3Response"
          }
        },
        "pagingToken": {
          "type": "string"
        }
      }
    },
    "Claim3Response": {
      "type": "object",
      "required": [
        "createdTimestamp",
        "currentStatus",
        "fieldGroupsByLocator",
        "fieldValues",
        "locator",
        "mediaByLocator",
        "policyLocator",
        "productName",
        "subClaims",
        "updatedTimestamp"
      ],
      "properties": {
        "createdTimestamp": {
          "type": "timestamp"
        },
        "currentStatus": {
          "type": "string",
          "enum": [
            "pending",
            "open",
            "closed"
          ]
        },
        "fieldGroupsByLocator": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "fieldValues": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "incidentTimestamp": {
          "type": "timestamp"
        },
        "locator": {
          "type": "string"
        },
        "mediaByLocator": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Media"
          }
        },
        "notificationTimestamp": {
          "type": "timestamp"
        },
        "policyLocator": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "subClaims": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubClaimResponse"
          }
        },
        "updatedTimestamp": {
          "type": "timestamp"
        }
      }
    },
    "Claim3UpdateRequest": {
      "type": "object",
      "required": [
        "addFieldGroups",
        "addSubClaims",
        "removeFieldGroups",
        "updateFieldGroups",
        "updateSubClaims"
      ],
      "properties": {
        "addFieldGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldGroupCreateRequest"
          }
        },
        "addSubClaims": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubClaimCreateRequest"
          }
        },
        "fieldValues": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "incidentTimestamp": {
          "type": "timestamp"
        },
        "notificationTimestamp": {
          "type": "timestamp"
        },
        "removeFieldGroups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "type": "string",
          "enum": [
            "open",
            "closed"
          ]
        },
        "updateFieldGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldGroupUpdateRequest"
          }
        },
        "updateSubClaims": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubClaimUpdateRequest"
          }
        }
      }
    },
    "ClaimConfigurationResponse": {
      "type": "object",
      "required": [
        "fields"
      ],
      "properties": {
        "fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldConfiguration"
          }
        },
        "subClaimConfiguration": {
          "$ref": "#/definitions/SubClaimConfigurationResponse"
        }
      }
    },
    "ClaimsPayablesReportRequest": {
      "type": "object",
      "required": [
        "endTimestamp",
        "startTimestamp"
      ],
      "properties": {
        "endTimestamp": {
          "type": "timestamp"
        },
        "startTimestamp": {
          "type": "timestamp"
        }
      }
    },
    "ClaimsReportRequest": {
      "type": "object",
      "required": [
        "reportTimestamp"
      ],
      "properties": {
        "reportTimestamp": {
          "type": "timestamp"
        }
      }
    },
    "CommissionChangeResponse": {
      "type": "object",
      "required": [
        "amountChange",
        "newAmount",
        "recipient"
      ],
      "properties": {
        "amountChange": {
          "type": "number"
        },
        "newAmount": {
          "type": "number"
        },
        "recipient": {
          "type": "string"
        }
      }
    },
    "CommissionResponse": {
      "type": "object",
      "required": [
        "amount",
        "amountCurrency",
        "recipient"
      ],
      "properties": {
        "amount": {
          "type": "number"
        },
        "amountCurrency": {
          "type": "string"
        },
        "recipient": {
          "type": "string"
        }
      }
    },
    "DateFieldConfiguration": {
      "type": "object",
      "required": [
        "name",
        "order",
        "precision",
        "title"
      ],
      "properties": {
        "condition": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "heading": {
          "type": "string"
        },
        "maximum": {
          "type": "string"
        },
        "maximumOffset": {
          "$ref": "#/definitions/DateOffsetConfiguration"
        },
        "minimum": {
          "type": "string"
        },
        "minimumOffset": {
          "$ref": "#/definitions/DateOffsetConfiguration"
        },
        "name": {
          "type": "string"
        },
        "newline": {
          "type": "boolean"
        },
        "optional": {
          "type": "boolean"
        },
        "order": {
          "type": "integer"
        },
        "precision": {
          "type": "string",
          "enum": [
            "year",
            "month",
            "day",
            "second"
          ]
        },
        "showCalendar": {
          "type": "boolean"
        },
        "title": {
          "type": "string"
        },
        "width": {
          "type": "integer"
        }
      }
    },
    "DateOffsetConfiguration": {
      "type": "object",
      "required": [
        "amount",
        "field"
      ],
      "properties": {
        "amount": {
          "type": "integer"
        },
        "field": {
          "type": "string",
          "enum": [
            "year",
            "month",
            "day",
            "second"
          ]
        },
        "roundToDay": {
          "type": "boolean"
        }
      }
    },
    "DeployTestConfigurationResponse": {
      "type": "object",
      "required": [
        "hostname",
        "logfile",
        "success",
        "tenantName"
      ],
      "properties": {
        "hostname": {
          "type": "string"
        },
        "logfile": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "tenantName": {
          "type": "string"
        }
      }
    },
    "DocumentRenderResponse": {
      "type": "object",
      "required": [
        "assignedVariables"
      ],
      "properties": {
        "assignedVariables": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "renderedHtmlUrl": {
          "type": "string"
        },
        "renderedPdfUrl": {
          "type": "string"
        }
      }
    },
    "EmailFieldConfiguration": {
      "type": "object",
      "required": [
        "name",
        "order",
        "title"
      ],
      "properties": {
        "condition": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "heading": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "newline": {
          "type": "boolean"
        },
        "optional": {
          "type": "boolean"
        },
        "order": {
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "width": {
          "type": "integer"
        }
      }
    },
    "EndorsementActionRequest": {
      "type": "object",
      "required": [],
      "properties": {
        "action": {
          "type": "string",
          "enum": [
            "discard",
            "quote",
            "accept",
            "issue",
            "invalidate",
            "update"
          ]
        },
        "conflictHandling": {
          "type": "string",
          "enum": [
            "block",
            "invalidate"
          ]
        },
        "endorsementUpdate": {
          "$ref": "#/definitions/EndorsementUpdateRequest"
        }
      }
    },
    "EndorsementConfigurationResponse": {
      "type": "object",
      "required": [
        "displayName",
        "documents",
        "name",
        "reprice"
      ],
      "properties": {
        "displayName": {
          "type": "string"
        },
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyDocumentConfiguration"
          }
        },
        "name": {
          "type": "string"
        },
        "reprice": {
          "type": "string",
          "enum": [
            "always",
            "never",
            "input",
            "all"
          ]
        }
      }
    },
    "EndorsementCreateRequest": {
      "type": "object",
      "required": [
        "endorsementName"
      ],
      "properties": {
        "addExposures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExposureCreateRequest"
          }
        },
        "addFieldGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldGroupCreateRequest"
          }
        },
        "endExposures": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "endorsementName": {
          "type": "string"
        },
        "fieldValues": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "newPolicyEndTimestamp": {
          "type": "timestamp"
        },
        "removeFieldGroups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "reprice": {
          "type": "boolean"
        },
        "startTimestamp": {
          "type": "timestamp"
        },
        "state": {
          "type": "string",
          "enum": [
            "application",
            "quoted",
            "accepted",
            "issued"
          ]
        },
        "updateExposures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EndorsementExposureUpdateRequest"
          }
        },
        "updateFieldGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldGroupUpdateRequest"
          }
        }
      }
    },
    "EndorsementExposureUpdateRequest": {
      "type": "object",
      "required": [
        "addFieldGroups",
        "addPerils",
        "endPerils",
        "exposureLocator",
        "fieldValues",
        "removeFieldGroups",
        "updateFieldGroups",
        "updatePerils"
      ],
      "properties": {
        "addFieldGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldGroupCreateRequest"
          }
        },
        "addPerils": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PerilCreateRequest"
          }
        },
        "endPerils": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "exposureLocator": {
          "type": "string"
        },
        "fieldValues": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "removeFieldGroups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "updateFieldGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldGroupUpdateRequest"
          }
        },
        "updatePerils": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PerilUpdateRequest"
          }
        }
      }
    },
    "EndorsementPolicyUpdateRequest": {
      "type": "object",
      "required": [
        "addExposures",
        "addFieldGroups",
        "endExposures",
        "removeFieldGroups",
        "updateExposures",
        "updateFieldGroups"
      ],
      "properties": {
        "addExposures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExposureCreateRequest"
          }
        },
        "addFieldGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldGroupCreateRequest"
          }
        },
        "endExposures": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "fieldValues": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "removeFieldGroups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "updateExposures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EndorsementExposureUpdateRequest"
          }
        },
        "updateFieldGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldGroupUpdateRequest"
          }
        }
      }
    },
    "EndorsementResponse": {
      "type": "object",
      "required": [
        "addExposures",
        "addFieldGroups",
        "createdTimestamp",
        "documents",
        "endExposures",
        "endorsementName",
        "fieldValues",
        "locator",
        "policyholderLocator",
        "policyLocator",
        "productLocator",
        "removeFieldGroups",
        "reprice",
        "state",
        "updatedTimestamp",
        "updateExposures",
        "updateFieldGroups"
      ],
      "properties": {
        "addExposures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExposureCreateRequest"
          }
        },
        "addFieldGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldGroupCreateRequest"
          }
        },
        "automatedUnderwritingResult": {
          "$ref": "#/definitions/AutomatedUnderwritingResultResponse"
        },
        "createdTimestamp": {
          "type": "timestamp"
        },
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyDocumentResponse"
          }
        },
        "endExposures": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "endorsementName": {
          "type": "string"
        },
        "fieldValues": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "invoice": {
          "$ref": "#/definitions/PolicyInvoice2Response"
        },
        "issuedTimestamp": {
          "type": "timestamp"
        },
        "locator": {
          "type": "string"
        },
        "newPolicyEndTimestamp": {
          "type": "timestamp"
        },
        "plannedInvoices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FutureInvoiceResponse"
          }
        },
        "policyholderLocator": {
          "type": "string"
        },
        "policyLocator": {
          "type": "string"
        },
        "price": {
          "$ref": "#/definitions/PolicyPriceChangeResponse"
        },
        "productLocator": {
          "type": "string"
        },
        "removeFieldGroups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "reprice": {
          "type": "boolean"
        },
        "startTimestamp": {
          "type": "timestamp"
        },
        "state": {
          "type": "string",
          "enum": [
            "application",
            "quoted",
            "accepted",
            "issued",
            "invalidated",
            "discarded"
          ]
        },
        "updatedTimestamp": {
          "type": "timestamp"
        },
        "updateExposures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EndorsementExposureUpdateRequest"
          }
        },
        "updateFieldGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldGroupUpdateRequest"
          }
        }
      }
    },
    "EndorsementUpdateRequest": {
      "type": "object",
      "required": [],
      "properties": {
        "addExposures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExposureCreateRequest"
          }
        },
        "addFieldGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldGroupCreateRequest"
          }
        },
        "endExposures": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "fieldValues": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "newPolicyEndTimestamp": {
          "type": "timestamp"
        },
        "removeFieldGroups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "reprice": {
          "type": "boolean"
        },
        "startTimestamp": {
          "type": "timestamp"
        },
        "updateExposures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EndorsementExposureUpdateRequest"
          }
        },
        "updateFieldGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldGroupUpdateRequest"
          }
        }
      }
    },
    "EntityResponse2": {
      "type": "object",
      "required": [
        "accountLocator",
        "completed",
        "createdTimestamp",
        "locator",
        "subEntitiesByLocator",
        "updatedTimestamp",
        "values"
      ],
      "properties": {
        "accountLocator": {
          "type": "string"
        },
        "completed": {
          "type": "boolean"
        },
        "createdTimestamp": {
          "type": "timestamp"
        },
        "locator": {
          "type": "string"
        },
        "subEntitiesByLocator": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/EntityResponse2"
          }
        },
        "updatedTimestamp": {
          "type": "timestamp"
        },
        "values": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "EventPageResponse": {
      "type": "object",
      "required": [
        "events"
      ],
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EventResponse"
          }
        },
        "pagingToken": {
          "type": "string"
        }
      }
    },
    "EventResponse": {
      "type": "object",
      "required": [
        "data",
        "id",
        "timestamp",
        "type"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/EventStreamData"
        },
        "id": {
          "type": "string"
        },
        "timestamp": {
          "type": "timestamp"
        },
        "type": {
          "type": "string",
          "enum": [
            "cancellation.create",
            "cancellation.update",
            "cancellation.rescind",
            "cancellation.issue",
            "claim.close",
            "claim.create",
            "claim.discard",
            "claim.open",
            "claim.update",
            "policy.gracePeriod",
            "policy.gracePeriod.update",
            "invoice.issue",
            "payment.pay",
            "policy.cancel",
            "policy.create",
            "policy.discard",
            "policy.endorse",
            "policy.finalize",
            "policy.invoice",
            "policy.issue",
            "policy.lapse",
            "policy.reinstatement.close",
            "policy.reinstatement.invoice",
            "policy.reinstatement.issue",
            "policy.reinstatement.open",
            "policy.renew",
            "policy.update",
            "subClaim.open",
            "subClaim.update",
            "subClaim.close",
            "subClaim.reopen",
            "subClaim.updateReserve",
            "policy.end.reminder",
            "subClaim.createPayable",
            "subClaim.reversePayable",
            "endorsement.create",
            "endorsement.update",
            "endorsement.quote",
            "endorsement.accept",
            "endorsement.issue",
            "endorsement.invalidate",
            "endorsement.discard",
            "reinstatement.accept",
            "reinstatement.create",
            "reinstatement.issue",
            "reinstatement.invalidate",
            "reinstatement.deadlineReached",
            "renewal.create",
            "renewal.update",
            "renewal.quote",
            "renewal.accept",
            "renewal.issue",
            "renewal.invalidate",
            "renewal.discard",
            "policy.end",
            "policy.quote.create",
            "policy.quote.discard",
            "policy.quote.update",
            "policy.quote.quoted",
            "policy.quote.accept",
            "policy.quote.declined",
            "premiumReport.create",
            "premiumReport.update",
            "premiumReport.issue",
            "premiumReport.discard",
            "login.success",
            "login.failure",
            "policyholder.create",
            "policyholder.update",
            "payment.reverse"
          ]
        },
        "username": {
          "type": "string"
        }
      }
    },
    "EventStreamCancellationCreateData": {
      "type": "object",
      "required": [
        "cancellationLocator",
        "modificationName",
        "policyLocator"
      ],
      "properties": {
        "cancellationLocator": {
          "type": "string"
        },
        "modificationName": {
          "type": "string"
        },
        "policyLocator": {
          "type": "string"
        }
      }
    },
    "EventStreamCancellationIssueData": {
      "type": "object",
      "required": [
        "cancellationLocator",
        "modificationName",
        "policyLocator"
      ],
      "properties": {
        "cancellationLocator": {
          "type": "string"
        },
        "modificationName": {
          "type": "string"
        },
        "policyLocator": {
          "type": "string"
        }
      }
    },
    "EventStreamCancellationRescindData": {
      "type": "object",
      "required": [
        "cancellationLocator",
        "modificationName",
        "policyLocator"
      ],
      "properties": {
        "cancellationLocator": {
          "type": "string"
        },
        "modificationName": {
          "type": "string"
        },
        "policyLocator": {
          "type": "string"
        }
      }
    },
    "EventStreamCancellationUpdateData": {
      "type": "object",
      "required": [
        "cancellationLocator",
        "modificationName",
        "policyLocator"
      ],
      "properties": {
        "cancellationLocator": {
          "type": "string"
        },
        "modificationName": {
          "type": "string"
        },
        "policyLocator": {
          "type": "string"
        }
      }
    },
    "EventStreamClaimCloseData": {
      "type": "object",
      "required": [
        "claimLocator",
        "policyLocator"
      ],
      "properties": {
        "claimLocator": {
          "type": "string"
        },
        "policyLocator": {
          "type": "string"
        }
      }
    },
    "EventStreamClaimCreateData": {
      "type": "object",
      "required": [
        "claimLocator",
        "policyLocator"
      ],
      "properties": {
        "claimLocator": {
          "type": "string"
        },
        "policyLocator": {
          "type": "string"
        }
      }
    },
    "EventStreamClaimDiscardData": {
      "type": "object",
      "required": [
        "claimLocator",
        "policyLocator"
      ],
      "properties": {
        "claimLocator": {
          "type": "string"
        },
        "policyLocator": {
          "type": "string"
        }
      }
    },
    "EventStreamClaimOpenData": {
      "type": "object",
      "required": [
        "claimLocator",
        "policyLocator"
      ],
      "properties": {
        "claimLocator": {
          "type": "string"
        },
        "policyLocator": {
          "type": "string"
        }
      }
    },
    "EventStreamClaimUpdateData": {
      "type": "object",
      "required": [
        "claimLocator",
        "policyLocator"
      ],
      "properties": {
        "claimLocator": {
          "type": "string"
        },
        "policyLocator": {
          "type": "string"
        }
      }
    },
    "EventStreamData": {
      "type": "object",
      "required": [],
      "properties": {}
    },
    "EventStreamEndorsementAcceptData": {
      "type": "object",
      "required": [
        "endorsementLocator",
        "endorsementName",
        "policyLocator",
        "policyModificationLocator"
      ],
      "properties": {
        "endorsementLocator": {
          "type": "string"
        },
        "endorsementName": {
          "type": "string"
        },
        "policyLocator": {
          "type": "string"
        },
        "policyModificationLocator": {
          "type": "string"
        }
      }
    },
    "EventStreamEndorsementCreateData": {
      "type": "object",
      "required": [
        "endorsementLocator",
        "endorsementName",
        "policyLocator",
        "policyModificationLocator"
      ],
      "properties": {
        "endorsementLocator": {
          "type": "string"
        },
        "endorsementName": {
          "type": "string"
        },
        "policyLocator": {
          "type": "string"
        },
        "policyModificationLocator": {
          "type": "string"
        }
      }
    },
    "EventStreamEndorsementDiscardData": {
      "type": "object",
      "required": [
        "endorsementLocator",
        "policyLocator"
      ],
      "properties": {
        "endorsementLocator": {
          "type": "string"
        },
        "policyLocator": {
          "type": "string"
        }
      }
    },
    "EventStreamEndorsementInvalidateData": {
      "type": "object",
      "required": [
        "endorsementLocator",
        "policyLocator"
      ],
      "properties": {
        "endorsementLocator": {
          "type": "string"
        },
        "policyLocator": {
          "type": "string"
        }
      }
    },
    "EventStreamEndorsementIssueData": {
      "type": "object",
      "required": [
        "endorsementLocator",
        "endorsementName",
        "policyLocator",
        "policyModificationLocator"
      ],
      "properties": {
        "endorsementLocator": {
          "type": "string"
        },
        "endorsementName": {
          "type": "string"
        },
        "policyLocator": {
          "type": "string"
        },
        "policyModificationLocator": {
          "type": "string"
        }
      }
    },
    "EventStreamEndorsementUpdateData": {
      "type": "object",
      "required": [
        "endorsementLocator",
        "endorsementName",
        "policyLocator",
        "policyModificationLocator"
      ],
      "properties": {
        "endorsementLocator": {
          "type": "string"
        },
        "endorsementName": {
          "type": "string"
        },
        "policyLocator": {
          "type": "string"
        },
        "policyModificationLocator": {
          "type": "string"
        }
      }
    },
    "EventStreamGracePeriodCreateData": {
      "type": "object",
      "required": [
        "gracePeriodLocator",
        "policyLocator"
      ],
      "properties": {
        "gracePeriodLocator": {
          "type": "string"
        },
        "policyLocator": {
          "type": "string"
        }
      }
    },
    "EventStreamLoginData": {
      "type": "object",
      "required": [
        "username"
      ],
      "properties": {
        "username": {
          "type": "string"
        }
      }
    },
    "EventStreamLoginFailureData": {
      "type": "object",
      "required": [
        "username"
      ],
      "properties": {
        "username": {
          "type": "string"
        }
      }
    },
    "EventStreamPaymentPayData": {
      "type": "object",
      "required": [
        "invoiceLocator",
        "paymentLocator",
        "policyLocator"
      ],
      "properties": {
        "invoiceLocator": {
          "type": "string"
        },
        "paymentLocator": {
          "type": "string"
        },
        "policyLocator": {
          "type": "string"
        }
      }
    },
    "EventStreamPaymentReverseData": {
      "type": "object",
      "required": [
        "invoiceLocator",
        "paymentLocator",
        "policyLocator"
      ],
      "properties": {
        "invoiceLocator": {
          "type": "string"
        },
        "paymentLocator": {
          "type": "string"
        },
        "policyLocator": {
          "type": "string"
        }
      }
    },
    "EventStreamPolicyCancelData": {
      "type": "object",
      "required": [
        "modificationName",
        "policyLocator"
      ],
      "properties": {
        "modificationName": {
          "type": "string"
        },
        "policyLocator": {
          "type": "string"
        }
      }
    },
    "EventStreamPolicyCreateData": {
      "type": "object",
      "required": [
        "policyLocator"
      ],
      "properties": {
        "policyLocator": {
          "type": "string"
        }
      }
    },
    "EventStreamPolicyDiscardData": {
      "type": "object",
      "required": [
        "policyLocator"
      ],
      "properties": {
        "policyLocator": {
          "type": "string"
        }
      }
    },
    "EventStreamPolicyEndData": {
      "type": "object",
      "required": [
        "policyEndTimestamp",
        "policyLocator"
      ],
      "properties": {
        "policyEndTimestamp": {
          "type": "timestamp"
        },
        "policyLocator": {
          "type": "string"
        }
      }
    },
    "EventStreamPolicyEndorseData": {
      "type": "object",
      "required": [
        "endorsementName",
        "modificationLocator",
        "policyLocator"
      ],
      "properties": {
        "endorsementName": {
          "type": "string"
        },
        "modificationLocator": {
          "type": "string"
        },
        "policyLocator": {
          "type": "string"
        }
      }
    },
    "EventStreamPolicyEndReminderData": {
      "type": "object",
      "required": [
        "policyEndTimestamp",
        "policyLocator",
        "reminderName"
      ],
      "properties": {
        "policyEndTimestamp": {
          "type": "timestamp"
        },
        "policyLocator": {
          "type": "string"
        },
        "reminderName": {
          "type": "string"
        }
      }
    },
    "EventStreamPolicyFinalizeData": {
      "type": "object",
      "required": [
        "policyLocator"
      ],
      "properties": {
        "policyLocator": {
          "type": "string"
        }
      }
    },
    "EventStreamPolicyholderCreateData": {
      "type": "object",
      "required": [
        "policyholderLocator"
      ],
      "properties": {
        "policyholderLocator": {
          "type": "string"
        }
      }
    },
    "EventStreamPolicyholderUpdateData": {
      "type": "object",
      "required": [
        "policyholderLocator"
      ],
      "properties": {
        "policyholderLocator": {
          "type": "string"
        }
      }
    },
    "EventStreamPolicyInvoiceIssueData": {
      "type": "object",
      "required": [
        "invoiceLocator",
        "policyLocator"
      ],
      "properties": {
        "invoiceLocator": {
          "type": "string"
        },
        "policyLocator": {
          "type": "string"
        }
      }
    },
    "EventStreamPolicyIssueData": {
      "type": "object",
      "required": [
        "policyLocator"
      ],
      "properties": {
        "policyLocator": {
          "type": "string"
        }
      }
    },
    "EventStreamPolicyLapseData": {
      "type": "object",
      "required": [
        "lapseLocator",
        "policyLocator"
      ],
      "properties": {
        "lapseLocator": {
          "type": "string"
        },
        "policyLocator": {
          "type": "string"
        }
      }
    },
    "EventStreamPolicyQuoteAcceptData": {
      "type": "object",
      "required": [
        "policyLocator",
        "quoteLocator"
      ],
      "properties": {
        "policyLocator": {
          "type": "string"
        },
        "quoteLocator": {
          "type": "string"
        }
      }
    },
    "EventStreamPolicyQuoteCreateData": {
      "type": "object",
      "required": [
        "policyLocator",
        "quoteLocator"
      ],
      "properties": {
        "policyLocator": {
          "type": "string"
        },
        "quoteLocator": {
          "type": "string"
        }
      }
    },
    "EventStreamPolicyQuoteDeclinedData": {
      "type": "object",
      "required": [
        "policyLocator",
        "quoteLocator"
      ],
      "properties": {
        "policyLocator": {
          "type": "string"
        },
        "quoteLocator": {
          "type": "string"
        }
      }
    },
    "EventStreamPolicyQuoteDiscardData": {
      "type": "object",
      "required": [
        "policyLocator",
        "quoteLocator"
      ],
      "properties": {
        "policyLocator": {
          "type": "string"
        },
        "quoteLocator": {
          "type": "string"
        }
      }
    },
    "EventStreamPolicyQuoteQuotedData": {
      "type": "object",
      "required": [
        "policyLocator",
        "quoteLocator"
      ],
      "properties": {
        "policyLocator": {
          "type": "string"
        },
        "quoteLocator": {
          "type": "string"
        }
      }
    },
    "EventStreamPolicyQuoteUpdateData": {
      "type": "object",
      "required": [
        "policyLocator",
        "quoteLocator"
      ],
      "properties": {
        "policyLocator": {
          "type": "string"
        },
        "quoteLocator": {
          "type": "string"
        }
      }
    },
    "EventStreamPolicyUpdateData": {
      "type": "object",
      "required": [
        "policyLocator"
      ],
      "properties": {
        "policyLocator": {
          "type": "string"
        }
      }
    },
    "EventStreamPremiumReportCreateData": {
      "type": "object",
      "required": [
        "premiumReportLocator"
      ],
      "properties": {
        "premiumReportLocator": {
          "type": "string"
        }
      }
    },
    "EventStreamPremiumReportDiscardData": {
      "type": "object",
      "required": [
        "premiumReportLocator"
      ],
      "properties": {
        "premiumReportLocator": {
          "type": "string"
        }
      }
    },
    "EventStreamPremiumReportIssueData": {
      "type": "object",
      "required": [
        "premiumReportLocator"
      ],
      "properties": {
        "premiumReportLocator": {
          "type": "string"
        }
      }
    },
    "EventStreamPremiumReportUpdateData": {
      "type": "object",
      "required": [
        "premiumReportLocator"
      ],
      "properties": {
        "premiumReportLocator": {
          "type": "string"
        }
      }
    },
    "EventStreamReinstatementAcceptData": {
      "type": "object",
      "required": [
        "cancellationLocator",
        "policyLocator",
        "reinstatementLocator"
      ],
      "properties": {
        "cancellationLocator": {
          "type": "string"
        },
        "policyLocator": {
          "type": "string"
        },
        "reinstatementLocator": {
          "type": "string"
        }
      }
    },
    "EventStreamReinstatementCloseData": {
      "type": "object",
      "required": [
        "policyLocator",
        "reinstatementLocator"
      ],
      "properties": {
        "policyLocator": {
          "type": "string"
        },
        "reinstatementLocator": {
          "type": "string"
        }
      }
    },
    "EventStreamReinstatementCreateData": {
      "type": "object",
      "required": [
        "cancellationLocator",
        "policyLocator",
        "reinstatementLocator"
      ],
      "properties": {
        "cancellationLocator": {
          "type": "string"
        },
        "policyLocator": {
          "type": "string"
        },
        "reinstatementLocator": {
          "type": "string"
        }
      }
    },
    "EventStreamReinstatementDeadlineReachedData": {
      "type": "object",
      "required": [
        "cancellationLocator",
        "policyLocator",
        "reinstatementLocator"
      ],
      "properties": {
        "cancellationLocator": {
          "type": "string"
        },
        "policyLocator": {
          "type": "string"
        },
        "reinstatementLocator": {
          "type": "string"
        }
      }
    },
    "EventStreamReinstatementInvalidateData": {
      "type": "object",
      "required": [
        "cancellationLocator",
        "policyLocator",
        "reinstatementLocator"
      ],
      "properties": {
        "cancellationLocator": {
          "type": "string"
        },
        "policyLocator": {
          "type": "string"
        },
        "reinstatementLocator": {
          "type": "string"
        }
      }
    },
    "EventStreamReinstatementInvoiceData": {
      "type": "object",
      "required": [
        "invoiceLocator",
        "policyLocator",
        "reinstatementLocator"
      ],
      "properties": {
        "invoiceLocator": {
          "type": "string"
        },
        "policyLocator": {
          "type": "string"
        },
        "reinstatementLocator": {
          "type": "string"
        }
      }
    },
    "EventStreamReinstatementIssueData": {
      "type": "object",
      "required": [
        "policyLocator",
        "reinstatementLocator"
      ],
      "properties": {
        "cancellationLocator": {
          "type": "string"
        },
        "policyLocator": {
          "type": "string"
        },
        "reinstatementLocator": {
          "type": "string"
        }
      }
    },
    "EventStreamReinstatementOpenData": {
      "type": "object",
      "required": [
        "policyLocator",
        "reinstatementLocator"
      ],
      "properties": {
        "policyLocator": {
          "type": "string"
        },
        "reinstatementLocator": {
          "type": "string"
        }
      }
    },
    "EventStreamRenewalAcceptData": {
      "type": "object",
      "required": [
        "endTimestamp",
        "policyLocator",
        "policyModificationLocator",
        "renewalLocator",
        "startTimestamp"
      ],
      "properties": {
        "endTimestamp": {
          "type": "timestamp"
        },
        "policyLocator": {
          "type": "string"
        },
        "policyModificationLocator": {
          "type": "string"
        },
        "renewalLocator": {
          "type": "string"
        },
        "startTimestamp": {
          "type": "timestamp"
        }
      }
    },
    "EventStreamRenewalCreateData": {
      "type": "object",
      "required": [
        "endTimestamp",
        "policyLocator",
        "policyModificationLocator",
        "renewalLocator",
        "startTimestamp"
      ],
      "properties": {
        "endTimestamp": {
          "type": "timestamp"
        },
        "policyLocator": {
          "type": "string"
        },
        "policyModificationLocator": {
          "type": "string"
        },
        "renewalLocator": {
          "type": "string"
        },
        "startTimestamp": {
          "type": "timestamp"
        }
      }
    },
    "EventStreamRenewalData": {
      "type": "object",
      "required": [
        "endTimestamp",
        "modificationLocator",
        "policyLocator",
        "startTimestamp"
      ],
      "properties": {
        "endTimestamp": {
          "type": "timestamp"
        },
        "modificationLocator": {
          "type": "string"
        },
        "policyLocator": {
          "type": "string"
        },
        "startTimestamp": {
          "type": "timestamp"
        }
      }
    },
    "EventStreamRenewalDiscardData": {
      "type": "object",
      "required": [
        "policyLocator",
        "renewalLocator"
      ],
      "properties": {
        "policyLocator": {
          "type": "string"
        },
        "renewalLocator": {
          "type": "string"
        }
      }
    },
    "EventStreamRenewalInvalidateData": {
      "type": "object",
      "required": [
        "policyLocator",
        "renewalLocator"
      ],
      "properties": {
        "policyLocator": {
          "type": "string"
        },
        "renewalLocator": {
          "type": "string"
        }
      }
    },
    "EventStreamRenewalIssueData": {
      "type": "object",
      "required": [
        "endTimestamp",
        "policyLocator",
        "policyModificationLocator",
        "renewalLocator",
        "startTimestamp"
      ],
      "properties": {
        "endTimestamp": {
          "type": "timestamp"
        },
        "policyLocator": {
          "type": "string"
        },
        "policyModificationLocator": {
          "type": "string"
        },
        "renewalLocator": {
          "type": "string"
        },
        "startTimestamp": {
          "type": "timestamp"
        }
      }
    },
    "EventStreamRenewalUpdateData": {
      "type": "object",
      "required": [
        "endTimestamp",
        "policyLocator",
        "policyModificationLocator",
        "renewalLocator",
        "startTimestamp"
      ],
      "properties": {
        "endTimestamp": {
          "type": "timestamp"
        },
        "policyLocator": {
          "type": "string"
        },
        "policyModificationLocator": {
          "type": "string"
        },
        "renewalLocator": {
          "type": "string"
        },
        "startTimestamp": {
          "type": "timestamp"
        }
      }
    },
    "EventStreamSubClaimCloseData": {
      "type": "object",
      "required": [
        "claimLocator",
        "policyLocator",
        "subClaimLocator"
      ],
      "properties": {
        "claimLocator": {
          "type": "string"
        },
        "policyLocator": {
          "type": "string"
        },
        "subClaimLocator": {
          "type": "string"
        }
      }
    },
    "EventStreamSubClaimOpenData": {
      "type": "object",
      "required": [
        "claimLocator",
        "policyLocator",
        "subClaimLocator"
      ],
      "properties": {
        "claimLocator": {
          "type": "string"
        },
        "policyLocator": {
          "type": "string"
        },
        "subClaimLocator": {
          "type": "string"
        }
      }
    },
    "EventStreamSubClaimPayableCreateData": {
      "type": "object",
      "required": [
        "claimLocator",
        "payableLocator",
        "policyLocator",
        "subClaimLocator"
      ],
      "properties": {
        "amountChange": {
          "type": "number"
        },
        "claimLocator": {
          "type": "string"
        },
        "payableLocator": {
          "type": "string"
        },
        "policyLocator": {
          "type": "string"
        },
        "reserveCurrency": {
          "type": "string"
        },
        "reserveType": {
          "type": "string",
          "enum": [
            "loss",
            "expense"
          ]
        },
        "subClaimLocator": {
          "type": "string"
        }
      }
    },
    "EventStreamSubClaimPayableReverseData": {
      "type": "object",
      "required": [
        "claimLocator",
        "policyLocator",
        "reversalLocator",
        "reversedLocator",
        "subClaimLocator"
      ],
      "properties": {
        "amountChange": {
          "type": "number"
        },
        "claimLocator": {
          "type": "string"
        },
        "policyLocator": {
          "type": "string"
        },
        "reserveCurrency": {
          "type": "string"
        },
        "reserveType": {
          "type": "string",
          "enum": [
            "loss",
            "expense"
          ]
        },
        "reversalLocator": {
          "type": "string"
        },
        "reversedLocator": {
          "type": "string"
        },
        "subClaimLocator": {
          "type": "string"
        }
      }
    },
    "EventStreamSubClaimReOpenData": {
      "type": "object",
      "required": [
        "claimLocator",
        "policyLocator",
        "subClaimLocator"
      ],
      "properties": {
        "claimLocator": {
          "type": "string"
        },
        "policyLocator": {
          "type": "string"
        },
        "subClaimLocator": {
          "type": "string"
        }
      }
    },
    "EventStreamSubClaimReserveUpdateData": {
      "type": "object",
      "required": [
        "claimLocator",
        "policyLocator",
        "reserveCurrency",
        "reserveType",
        "subClaimLocator"
      ],
      "properties": {
        "claimLocator": {
          "type": "string"
        },
        "newAmount": {
          "type": "number"
        },
        "oldAmount": {
          "type": "number"
        },
        "policyLocator": {
          "type": "string"
        },
        "reserveCurrency": {
          "type": "string"
        },
        "reserveType": {
          "type": "string",
          "enum": [
            "loss",
            "expense"
          ]
        },
        "subClaimLocator": {
          "type": "string"
        }
      }
    },
    "EventStreamSubClaimUpdateData": {
      "type": "object",
      "required": [
        "claimLocator",
        "policyLocator",
        "subClaimLocator"
      ],
      "properties": {
        "claimLocator": {
          "type": "string"
        },
        "policyLocator": {
          "type": "string"
        },
        "subClaimLocator": {
          "type": "string"
        }
      }
    },
    "ExposureCharacteristicsPriceRequest": {
      "type": "object",
      "required": [
        "fieldGroupsByLocator"
      ],
      "properties": {
        "fieldGroupsByLocator": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "fieldValues": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "ExposureCharacteristicsResponse": {
      "type": "object",
      "required": [
        "createdTimestamp",
        "endTimestamp",
        "exposureLocator",
        "fieldGroupsByLocator",
        "fieldValues",
        "locator",
        "mediaByLocator",
        "policyholderLocator",
        "policyLocator",
        "productLocator",
        "startTimestamp",
        "updatedTimestamp"
      ],
      "properties": {
        "createdTimestamp": {
          "type": "timestamp"
        },
        "endTimestamp": {
          "type": "timestamp"
        },
        "exposureLocator": {
          "type": "string"
        },
        "fieldGroupsByLocator": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "fieldValues": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "issuedTimestamp": {
          "type": "timestamp"
        },
        "locator": {
          "type": "string"
        },
        "mediaByLocator": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Media"
          }
        },
        "policyholderLocator": {
          "type": "string"
        },
        "policyLocator": {
          "type": "string"
        },
        "productLocator": {
          "type": "string"
        },
        "replacedTimestamp": {
          "type": "timestamp"
        },
        "startTimestamp": {
          "type": "timestamp"
        },
        "updatedTimestamp": {
          "type": "timestamp"
        }
      }
    },
    "ExposureConfigurationResponse": {
      "type": "object",
      "required": [
        "displayName",
        "externalDataCalls",
        "fields",
        "name",
        "perils"
      ],
      "properties": {
        "displayName": {
          "type": "string"
        },
        "externalDataCalls": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FrontendExternalDataCallConfiguration"
          }
        },
        "fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldConfiguration"
          }
        },
        "name": {
          "type": "string"
        },
        "perils": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PerilConfigurationResponse"
          }
        }
      }
    },
    "ExposureCreateRequest": {
      "type": "object",
      "required": [
        "exposureName"
      ],
      "properties": {
        "exposureName": {
          "type": "string"
        },
        "fieldGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldGroupCreateRequest"
          }
        },
        "fieldValues": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "perils": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PerilCreateRequest"
          }
        }
      }
    },
    "ExposureModificationResponse": {
      "type": "object",
      "required": [
        "exposureLocator",
        "locator",
        "perilModifications",
        "policyholderLocator",
        "policyLocator",
        "policyModificationLocator",
        "productLocator"
      ],
      "properties": {
        "exposureLocator": {
          "type": "string"
        },
        "locator": {
          "type": "string"
        },
        "newExposureCharacteristicsLocator": {
          "type": "string"
        },
        "perilModifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PerilModificationResponse"
          }
        },
        "policyholderLocator": {
          "type": "string"
        },
        "policyLocator": {
          "type": "string"
        },
        "policyModificationLocator": {
          "type": "string"
        },
        "productLocator": {
          "type": "string"
        }
      }
    },
    "ExposurePriceChangeResponse": {
      "type": "object",
      "required": [
        "commissions",
        "grossCommissionsChange",
        "grossPremiumChange",
        "grossTaxesChange",
        "name",
        "newGrossCommissions",
        "newGrossPremium",
        "newGrossTaxes",
        "perilPrices",
        "taxGroups"
      ],
      "properties": {
        "commissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommissionChangeResponse"
          }
        },
        "grossCommissionsChange": {
          "type": "number"
        },
        "grossPremiumChange": {
          "type": "number"
        },
        "grossTaxesChange": {
          "type": "number"
        },
        "locator": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "newGrossCommissions": {
          "type": "number"
        },
        "newGrossPremium": {
          "type": "number"
        },
        "newGrossTaxes": {
          "type": "number"
        },
        "perilPrices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PerilPriceChangeResponse"
          }
        },
        "taxGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxChangeResponse"
          }
        }
      }
    },
    "ExposureResponse": {
      "type": "object",
      "required": [
        "characteristics",
        "createdTimestamp",
        "displayId",
        "locator",
        "name",
        "perils",
        "policyholderLocator",
        "policyLocator",
        "productLocator",
        "updatedTimestamp"
      ],
      "properties": {
        "characteristics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExposureCharacteristicsResponse"
          }
        },
        "createdTimestamp": {
          "type": "timestamp"
        },
        "displayId": {
          "type": "string"
        },
        "locator": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "perils": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PerilResponse"
          }
        },
        "policyholderLocator": {
          "type": "string"
        },
        "policyLocator": {
          "type": "string"
        },
        "productLocator": {
          "type": "string"
        },
        "updatedTimestamp": {
          "type": "timestamp"
        }
      }
    },
    "ExposureUpdateRequest": {
      "type": "object",
      "required": [
        "addFieldGroups",
        "addPerils",
        "exposureLocator",
        "removeFieldGroups",
        "removePerils",
        "updateFieldGroups",
        "updatePerils"
      ],
      "properties": {
        "addFieldGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldGroupCreateRequest"
          }
        },
        "addPerils": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PerilCreateRequest"
          }
        },
        "exposureLocator": {
          "type": "string"
        },
        "fieldValues": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "removeFieldGroups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "removePerils": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "updateFieldGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldGroupUpdateRequest"
          }
        },
        "updatePerils": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PerilUpdateRequest"
          }
        }
      }
    },
    "ExternalDataCallRequest": {
      "type": "object",
      "required": [
        "policy"
      ],
      "properties": {
        "exposureCharacteristics": {
          "$ref": "#/definitions/ExposureCharacteristicsResponse"
        },
        "perilCharacteristics": {
          "$ref": "#/definitions/PerilCharacteristicsResponse"
        },
        "policy": {
          "$ref": "#/definitions/Policy2Response"
        },
        "policyCharacteristics": {
          "$ref": "#/definitions/PolicyCharacteristicsResponse"
        }
      }
    },
    "ExternalDataCallResponse": {
      "type": "object",
      "required": [],
      "properties": {
        "fieldValues": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "ExternalRaterCommissionResponse": {
      "type": "object",
      "required": [
        "amount",
        "recipient"
      ],
      "properties": {
        "amount": {
          "type": "string"
        },
        "recipient": {
          "type": "string"
        }
      }
    },
    "ExternalRaterPricedCharacteristics": {
      "type": "object",
      "required": [
        "premium"
      ],
      "properties": {
        "commissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalRaterCommissionResponse"
          }
        },
        "premium": {
          "type": "string"
        },
        "technicalPremium": {
          "type": "string"
        }
      }
    },
    "ExternalRaterPriceRequest": {
      "type": "object",
      "required": [
        "operation",
        "policy",
        "policyExposurePerils"
      ],
      "properties": {
        "endorsementLocator": {
          "type": "string"
        },
        "operation": {
          "type": "string",
          "enum": [
            "new_business",
            "endorsement",
            "renewal",
            "reinstatement"
          ]
        },
        "policy": {
          "$ref": "#/definitions/Policy2Response"
        },
        "policyExposurePerils": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyExposurePerilPricingRequest"
          }
        },
        "quoteLocator": {
          "type": "string"
        },
        "renewalLocator": {
          "type": "string"
        }
      }
    },
    "ExternalRaterPriceResponse": {
      "type": "object",
      "required": [
        "pricedPerilCharacteristics"
      ],
      "properties": {
        "exceptionMessage": {
          "type": "string"
        },
        "pricedPerilCharacteristics": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ExternalRaterPricedCharacteristics"
          }
        }
      }
    },
    "ExternalServiceIntegrationAddRequest": {
      "type": "object",
      "required": [
        "name",
        "url"
      ],
      "properties": {
        "headers": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "external_rater"
          ]
        },
        "url": {
          "type": "string"
        }
      }
    },
    "ExternalServiceIntegrationBatchUpdateRequest": {
      "type": "object",
      "required": [
        "externalServiceIntegrations"
      ],
      "properties": {
        "externalServiceIntegrations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalServiceIntegrationAddRequest"
          }
        }
      }
    },
    "ExternalServiceIntegrationResponse": {
      "type": "object",
      "required": [
        "headers",
        "name",
        "tenantLocator",
        "type",
        "url"
      ],
      "properties": {
        "headers": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "tenantLocator": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "external_rater"
          ]
        },
        "url": {
          "type": "string"
        }
      }
    },
    "ExternalServiceIntegrationsResponse": {
      "type": "object",
      "required": [
        "externalServiceIntegrations"
      ],
      "properties": {
        "externalServiceIntegrations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalServiceIntegrationResponse"
          }
        }
      }
    },
    "ExternalServiceIntegrationUpdateRequest": {
      "type": "object",
      "required": [
        "url"
      ],
      "properties": {
        "headers": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "url": {
          "type": "string"
        }
      }
    },
    "FeeChangeResponse": {
      "type": "object",
      "required": [
        "amountChange",
        "name",
        "newAmount"
      ],
      "properties": {
        "amountChange": {
          "type": "number"
        },
        "locator": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "newAmount": {
          "type": "number"
        }
      }
    },
    "FeeConfigurationResponse": {
      "type": "object",
      "required": [
        "displayName",
        "name"
      ],
      "properties": {
        "displayName": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "FeeResponse": {
      "type": "object",
      "required": [
        "amount",
        "amountCurrency",
        "description",
        "locator",
        "name"
      ],
      "properties": {
        "amount": {
          "type": "number"
        },
        "amountCurrency": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "locator": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "FieldConfiguration": {
      "type": "object",
      "required": [
        "name",
        "order",
        "title",
        "type"
      ],
      "properties": {
        "condition": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "heading": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "optional": {
          "type": "boolean"
        },
        "order": {
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "FieldErrors": {
      "type": "object",
      "required": [
        "errors",
        "fieldGroupErrors",
        "hasErrors"
      ],
      "properties": {
        "errorMessage": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationFieldError2"
          }
        },
        "fieldGroupErrors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldGroupErrors"
          }
        },
        "hasErrors": {
          "type": "boolean"
        }
      }
    },
    "FieldGroupCreateRequest": {
      "type": "object",
      "required": [
        "fieldName"
      ],
      "properties": {
        "fieldName": {
          "type": "string"
        },
        "fieldValues": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "FieldGroupErrors": {
      "type": "object",
      "required": [
        "errors",
        "fieldName"
      ],
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationFieldError2"
          }
        },
        "fieldName": {
          "type": "string"
        },
        "index": {
          "type": "integer"
        },
        "locator": {
          "type": "string"
        }
      }
    },
    "FieldGroupUpdateRequest": {
      "type": "object",
      "required": [
        "fieldGroupLocator",
        "fieldName",
        "fieldValues"
      ],
      "properties": {
        "fieldGroupLocator": {
          "type": "string"
        },
        "fieldName": {
          "type": "string"
        },
        "fieldValues": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "FinancialTransactionReportRequest": {
      "type": "object",
      "required": [
        "endTimestamp",
        "startTimestamp"
      ],
      "properties": {
        "endTimestamp": {
          "type": "timestamp"
        },
        "startTimestamp": {
          "type": "timestamp"
        }
      }
    },
    "FinancialTransactionResponse": {
      "type": "object",
      "required": [
        "amount",
        "amountCurrency",
        "endTimestamp",
        "policyModificationLocator",
        "postedTimestamp",
        "startTimestamp",
        "type"
      ],
      "properties": {
        "amount": {
          "type": "number"
        },
        "amountCurrency": {
          "type": "string"
        },
        "commissionRecipient": {
          "type": "string"
        },
        "endTimestamp": {
          "type": "timestamp"
        },
        "feeLocator": {
          "type": "string"
        },
        "feeName": {
          "type": "string"
        },
        "perilCharacteristicsLocator": {
          "type": "string"
        },
        "perilName": {
          "type": "string"
        },
        "policyModificationLocator": {
          "type": "string"
        },
        "postedTimestamp": {
          "type": "timestamp"
        },
        "startTimestamp": {
          "type": "timestamp"
        },
        "taxLocator": {
          "type": "string"
        },
        "taxName": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "premium",
            "tax",
            "fee",
            "commission"
          ]
        }
      }
    },
    "FrontendExternalDataCallConfiguration": {
      "type": "object",
      "required": [
        "targetFields",
        "triggerField"
      ],
      "properties": {
        "targetFields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "triggerField": {
          "type": "string"
        }
      }
    },
    "FutureInvoiceResponse": {
      "type": "object",
      "required": [
        "endTimestamp",
        "financialTransactions",
        "issueTimestamp",
        "startTimestamp"
      ],
      "properties": {
        "endTimestamp": {
          "type": "timestamp"
        },
        "financialTransactions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FinancialTransactionResponse"
          }
        },
        "issueTimestamp": {
          "type": "timestamp"
        },
        "startTimestamp": {
          "type": "timestamp"
        }
      }
    },
    "GeneratedInvoiceResponse": {
      "type": "object",
      "required": [
        "financialTransactions",
        "invoice"
      ],
      "properties": {
        "financialTransactions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FinancialTransactionResponse"
          }
        },
        "invoice": {
          "$ref": "#/definitions/PolicyInvoice2Response"
        }
      }
    },
    "GetExposurePriceResponse": {
      "type": "object",
      "required": [
        "commissions",
        "grossCommissions",
        "grossCommissionsCurrency",
        "grossPremium",
        "grossPremiumCurrency",
        "grossTaxes",
        "grossTaxesCurrency",
        "grossTechnicalPremiumCurrency",
        "locator",
        "name",
        "perilPrices",
        "taxGroups",
        "total",
        "totalCurrency"
      ],
      "properties": {
        "commissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommissionResponse"
          }
        },
        "grossCommissions": {
          "type": "number"
        },
        "grossCommissionsCurrency": {
          "type": "string"
        },
        "grossPremium": {
          "type": "number"
        },
        "grossPremiumCurrency": {
          "type": "string"
        },
        "grossTaxes": {
          "type": "number"
        },
        "grossTaxesCurrency": {
          "type": "string"
        },
        "grossTechnicalPremium": {
          "type": "number"
        },
        "grossTechnicalPremiumCurrency": {
          "type": "string"
        },
        "locator": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "perilPrices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetPerilPriceResponse"
          }
        },
        "taxGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxGroupResponse"
          }
        },
        "total": {
          "type": "number"
        },
        "totalCurrency": {
          "type": "string"
        }
      }
    },
    "GetInvoiceFinancialTransactionsResponse": {
      "type": "object",
      "required": [
        "financialTransactions"
      ],
      "properties": {
        "financialTransactions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FinancialTransactionResponse"
          }
        }
      }
    },
    "GetLastDeliveredEventResponse": {
      "type": "object",
      "required": [
        "pagingToken"
      ],
      "properties": {
        "pagingToken": {
          "type": "string"
        }
      }
    },
    "GetPerilPriceResponse": {
      "type": "object",
      "required": [
        "commissions",
        "grossCommissions",
        "grossCommissionsCurrency",
        "grossTaxes",
        "grossTaxesCurrency",
        "locator",
        "name",
        "premium",
        "premiumCurrency",
        "taxes",
        "technicalPremiumCurrency",
        "total",
        "totalCurrency"
      ],
      "properties": {
        "commissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommissionResponse"
          }
        },
        "grossCommissions": {
          "type": "number"
        },
        "grossCommissionsCurrency": {
          "type": "string"
        },
        "grossTaxes": {
          "type": "number"
        },
        "grossTaxesCurrency": {
          "type": "string"
        },
        "locator": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "premium": {
          "type": "number"
        },
        "premiumCurrency": {
          "type": "string"
        },
        "taxes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxGroupResponse"
          }
        },
        "technicalPremium": {
          "type": "number"
        },
        "technicalPremiumCurrency": {
          "type": "string"
        },
        "total": {
          "type": "number"
        },
        "totalCurrency": {
          "type": "string"
        }
      }
    },
    "GetPolicyPriceResponse": {
      "type": "object",
      "required": [
        "commissions",
        "exposurePrices",
        "fees",
        "grossCommissions",
        "grossCommissionsCurrency",
        "grossFees",
        "grossFeesCurrency",
        "grossPremium",
        "grossPremiumCurrency",
        "grossTaxes",
        "grossTaxesCurrency",
        "grossTechnicalPremiumCurrency",
        "taxGroups",
        "total",
        "totalCurrency"
      ],
      "properties": {
        "commissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommissionResponse"
          }
        },
        "exposurePrices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetExposurePriceResponse"
          }
        },
        "fees": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FeeResponse"
          }
        },
        "grossCommissions": {
          "type": "number"
        },
        "grossCommissionsCurrency": {
          "type": "string"
        },
        "grossFees": {
          "type": "number"
        },
        "grossFeesCurrency": {
          "type": "string"
        },
        "grossPremium": {
          "type": "number"
        },
        "grossPremiumCurrency": {
          "type": "string"
        },
        "grossTaxes": {
          "type": "number"
        },
        "grossTaxesCurrency": {
          "type": "string"
        },
        "grossTechnicalPremium": {
          "type": "number"
        },
        "grossTechnicalPremiumCurrency": {
          "type": "string"
        },
        "taxGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxGroupResponse"
          }
        },
        "total": {
          "type": "number"
        },
        "totalCurrency": {
          "type": "string"
        }
      }
    },
    "GraceLapseReinstatementResponse": {
      "type": "object",
      "required": [
        "gracePeriod",
        "reinstatements"
      ],
      "properties": {
        "gracePeriod": {
          "$ref": "#/definitions/GracePeriodResponse"
        },
        "lapse": {
          "$ref": "#/definitions/LapseResponse"
        },
        "reinstatements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LapseReinstatementResponse"
          }
        }
      }
    },
    "GracePeriodResponse": {
      "type": "object",
      "required": [
        "endTimestamp",
        "invoiceLocator",
        "locator",
        "policyholderLocator",
        "policyId",
        "policyLocator",
        "productLocator",
        "startTimestamp"
      ],
      "properties": {
        "cancellationLocator": {
          "type": "string"
        },
        "document": {
          "$ref": "#/definitions/PolicyDocumentResponse"
        },
        "endTimestamp": {
          "type": "timestamp"
        },
        "invoiceLocator": {
          "type": "string"
        },
        "locator": {
          "type": "string"
        },
        "policyholderLocator": {
          "type": "string"
        },
        "policyId": {
          "type": "string"
        },
        "policyLocator": {
          "type": "string"
        },
        "productLocator": {
          "type": "string"
        },
        "settledTimestamp": {
          "type": "timestamp"
        },
        "startTimestamp": {
          "type": "timestamp"
        }
      }
    },
    "GroupFieldConfiguration": {
      "type": "object",
      "required": [
        "fields",
        "name",
        "order",
        "title"
      ],
      "properties": {
        "condition": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldConfiguration"
          }
        },
        "heading": {
          "type": "string"
        },
        "maximum": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "newline": {
          "type": "boolean"
        },
        "optional": {
          "type": "boolean"
        },
        "order": {
          "type": "integer"
        },
        "repeatable": {
          "type": "boolean"
        },
        "title": {
          "type": "string"
        },
        "width": {
          "type": "integer"
        }
      }
    },
    "HealthResponse": {
      "type": "object",
      "required": [
        "duration_millis",
        "generated_at",
        "result",
        "tests"
      ],
      "properties": {
        "duration_millis": {
          "type": "integer"
        },
        "generated_at": {
          "type": "string"
        },
        "result": {
          "type": "string",
          "enum": [
            "up",
            "down"
          ]
        },
        "tests": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/HealthTestResponse"
          }
        }
      }
    },
    "HealthTestResponse": {
      "type": "object",
      "required": [
        "duration_millis",
        "result",
        "tested_at"
      ],
      "properties": {
        "duration_millis": {
          "type": "integer"
        },
        "result": {
          "type": "string",
          "enum": [
            "up",
            "down"
          ]
        },
        "tested_at": {
          "type": "string"
        }
      }
    },
    "Identifiable": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "ILocatable": {
      "type": "object",
      "required": [
        "locator"
      ],
      "properties": {
        "locator": {
          "type": "string"
        }
      }
    },
    "LapseConfigurationResponse": {
      "type": "object",
      "required": [
        "gracePeriodDays",
        "reinstatementPeriodDays"
      ],
      "properties": {
        "gracePeriodDays": {
          "type": "integer"
        },
        "reinstatementPeriodDays": {
          "type": "integer"
        }
      }
    },
    "LapseReinstatementResponse": {
      "type": "object",
      "required": [
        "createdTimestamp",
        "currentStatus",
        "locator",
        "statuses",
        "updatedTimestamp",
        "uploadedDocuments"
      ],
      "properties": {
        "createdTimestamp": {
          "type": "timestamp"
        },
        "currentStatus": {
          "type": "string",
          "enum": [
            "open",
            "closed",
            "invoiced",
            "issued"
          ]
        },
        "invoicedTimestamp": {
          "type": "timestamp"
        },
        "invoiceLocator": {
          "type": "string"
        },
        "issuedTimestamp": {
          "type": "timestamp"
        },
        "locator": {
          "type": "string"
        },
        "reinstatementDocument": {
          "$ref": "#/definitions/PolicyDocumentResponse"
        },
        "reinstatementTimestamp": {
          "type": "timestamp"
        },
        "statuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReinstatementStatusAndTimeResponse"
          }
        },
        "updatedTimestamp": {
          "type": "timestamp"
        },
        "uploadedDocuments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyDocumentResponse"
          }
        }
      }
    },
    "LapseResponse": {
      "type": "object",
      "required": [
        "createdTimestamp",
        "lapseTimestamp",
        "locator",
        "reinstatementPeriodEndTimestamp"
      ],
      "properties": {
        "createdTimestamp": {
          "type": "timestamp"
        },
        "document": {
          "$ref": "#/definitions/PolicyDocumentResponse"
        },
        "lapseTimestamp": {
          "type": "timestamp"
        },
        "locator": {
          "type": "string"
        },
        "reinstatementPeriodEndTimestamp": {
          "type": "timestamp"
        }
      }
    },
    "LedgerLineItem": {
      "type": "object",
      "required": [
        "amountChange",
        "changeTimestamp",
        "changeType",
        "reserveBalance"
      ],
      "properties": {
        "amountChange": {
          "type": "number"
        },
        "changeTimestamp": {
          "type": "timestamp"
        },
        "changeType": {
          "type": "string",
          "enum": [
            "payable.created",
            "payable.reversed",
            "reserve.updated",
            "reserve.closed",
            "reserve.opened",
            "reserve.reopened"
          ]
        },
        "newAmount": {
          "type": "number"
        },
        "oldAmount": {
          "type": "number"
        },
        "payableLocator": {
          "type": "string"
        },
        "reserveBalance": {
          "type": "number"
        }
      }
    },
    "LogEvent": {
      "type": "object",
      "required": [
        "message",
        "requestId",
        "timestamp"
      ],
      "properties": {
        "message": {
          "type": "string"
        },
        "requestId": {
          "type": "string"
        },
        "timestamp": {
          "type": "timestamp"
        }
      }
    },
    "LookupFieldConfiguration": {
      "type": "object",
      "required": [
        "name",
        "order",
        "table",
        "title"
      ],
      "properties": {
        "condition": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "heading": {
          "type": "string"
        },
        "match": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "newline": {
          "type": "boolean"
        },
        "optional": {
          "type": "boolean"
        },
        "order": {
          "type": "integer"
        },
        "public": {
          "type": "boolean"
        },
        "table": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "width": {
          "type": "integer"
        }
      }
    },
    "MarkDeliveredEventsRequest": {
      "type": "object",
      "required": [
        "deliveredPagingToken"
      ],
      "properties": {
        "deliveredPagingToken": {
          "type": "string"
        }
      }
    },
    "Media": {
      "type": "object",
      "required": [
        "expiresTimestamp",
        "locator",
        "mimeType",
        "url"
      ],
      "properties": {
        "expiresTimestamp": {
          "type": "timestamp"
        },
        "fileName": {
          "type": "string"
        },
        "locator": {
          "type": "string"
        },
        "mimeType": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "MediaFieldConfiguration": {
      "type": "object",
      "required": [
        "name",
        "order",
        "title"
      ],
      "properties": {
        "condition": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "heading": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "newline": {
          "type": "boolean"
        },
        "optional": {
          "type": "boolean"
        },
        "order": {
          "type": "integer"
        },
        "repeatable": {
          "type": "boolean"
        },
        "title": {
          "type": "string"
        },
        "width": {
          "type": "integer"
        }
      }
    },
    "NumberFieldConfiguration": {
      "type": "object",
      "required": [
        "name",
        "order",
        "title"
      ],
      "properties": {
        "condition": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "decimalPlaces": {
          "type": "integer"
        },
        "heading": {
          "type": "string"
        },
        "maximum": {
          "type": "number"
        },
        "minimum": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "newline": {
          "type": "boolean"
        },
        "optional": {
          "type": "boolean"
        },
        "order": {
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "width": {
          "type": "integer"
        }
      }
    },
    "PasswordChangeRequest": {
      "type": "object",
      "required": [
        "oldPassword",
        "password"
      ],
      "properties": {
        "oldPassword": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "PayableCommissionsReportRequest": {
      "type": "object",
      "required": [
        "endTimestamp",
        "startTimestamp"
      ],
      "properties": {
        "endTimestamp": {
          "type": "timestamp"
        },
        "startTimestamp": {
          "type": "timestamp"
        }
      }
    },
    "PaymentCreateRequest": {
      "type": "object",
      "required": [],
      "properties": {
        "fieldValues": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "PaymentResponse2": {
      "type": "object",
      "required": [
        "amount",
        "amountCurrency",
        "displayId",
        "fieldValues",
        "invoiceLocator",
        "locator",
        "mediaByLocator",
        "postedTimestamp"
      ],
      "properties": {
        "amount": {
          "type": "number"
        },
        "amountCurrency": {
          "type": "string"
        },
        "displayId": {
          "type": "string"
        },
        "fieldValues": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "invoiceLocator": {
          "type": "string"
        },
        "locator": {
          "type": "string"
        },
        "mediaByLocator": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Media"
          }
        },
        "postedTimestamp": {
          "type": "timestamp"
        },
        "reversedTimestamp": {
          "type": "timestamp"
        }
      }
    },
    "PaymentScheduleResponse": {
      "type": "object",
      "required": [
        "displayName",
        "name",
        "type"
      ],
      "properties": {
        "displayName": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "total",
            "monthly",
            "annually",
            "semiannually",
            "quarterly",
            "every_two_weeks",
            "every_week"
          ]
        }
      }
    },
    "PaymentTermsResponse": {
      "type": "object",
      "required": [
        "amount",
        "unit"
      ],
      "properties": {
        "amount": {
          "type": "integer"
        },
        "unit": {
          "type": "string",
          "enum": [
            "day"
          ]
        }
      }
    },
    "PerilCharacteristicsPriceRequest": {
      "type": "object",
      "required": [
        "fieldGroupsByLocator"
      ],
      "properties": {
        "deductible": {
          "type": "number"
        },
        "fieldGroupsByLocator": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "fieldValues": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "indemnityInAggregate": {
          "type": "string"
        },
        "indemnityPerEvent": {
          "type": "string"
        },
        "indemnityPerItem": {
          "type": "string"
        },
        "lumpSumPayment": {
          "type": "number"
        }
      }
    },
    "PerilCharacteristicsResponse": {
      "type": "object",
      "required": [
        "coverageEndTimestamp",
        "coverageStartTimestamp",
        "createdTimestamp",
        "deductibleCurrency",
        "exposureCharacteristicsLocator",
        "fieldGroupsByLocator",
        "fieldValues",
        "indemnityInAggregateCurrency",
        "indemnityPerEventCurrency",
        "indemnityPerItemCurrency",
        "locator",
        "lumpSumPaymentCurrency",
        "mediaByLocator",
        "perilLocator",
        "policyCharacteristicsLocator",
        "policyholderLocator",
        "policyLocator",
        "policyModificationLocator",
        "premiumCurrency",
        "productLocator",
        "updatedTimestamp"
      ],
      "properties": {
        "coverageEndTimestamp": {
          "type": "timestamp"
        },
        "coverageStartTimestamp": {
          "type": "timestamp"
        },
        "createdTimestamp": {
          "type": "timestamp"
        },
        "deductible": {
          "type": "number"
        },
        "deductibleCurrency": {
          "type": "string"
        },
        "exposureCharacteristicsLocator": {
          "type": "string"
        },
        "fieldGroupsByLocator": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "fieldValues": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "indemnityInAggregate": {
          "type": "string"
        },
        "indemnityInAggregateCurrency": {
          "type": "string"
        },
        "indemnityPerEvent": {
          "type": "string"
        },
        "indemnityPerEventCurrency": {
          "type": "string"
        },
        "indemnityPerItem": {
          "type": "string"
        },
        "indemnityPerItemCurrency": {
          "type": "string"
        },
        "issuedTimestamp": {
          "type": "timestamp"
        },
        "locator": {
          "type": "string"
        },
        "lumpSumPayment": {
          "type": "number"
        },
        "lumpSumPaymentCurrency": {
          "type": "string"
        },
        "mediaByLocator": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Media"
          }
        },
        "monthPremium": {
          "type": "number"
        },
        "perilLocator": {
          "type": "string"
        },
        "policyCharacteristicsLocator": {
          "type": "string"
        },
        "policyholderLocator": {
          "type": "string"
        },
        "policyLocator": {
          "type": "string"
        },
        "policyModificationLocator": {
          "type": "string"
        },
        "premium": {
          "type": "number"
        },
        "premiumCurrency": {
          "type": "string"
        },
        "productLocator": {
          "type": "string"
        },
        "replacedTimestamp": {
          "type": "timestamp"
        },
        "technicalPremium": {
          "type": "number"
        },
        "updatedTimestamp": {
          "type": "timestamp"
        }
      }
    },
    "PerilConfigurationResponse": {
      "type": "object",
      "required": [
        "displayName",
        "externalDataCalls",
        "fields",
        "name"
      ],
      "properties": {
        "deductible": {
          "type": "number"
        },
        "displayName": {
          "type": "string"
        },
        "externalDataCalls": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FrontendExternalDataCallConfiguration"
          }
        },
        "fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldConfiguration"
          }
        },
        "indemnityInAggregate": {
          "type": "string"
        },
        "indemnityPerEvent": {
          "type": "string"
        },
        "indemnityPerItem": {
          "type": "string"
        },
        "lumpSumPayment": {
          "type": "number"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "PerilCreateRequest": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "deductible": {
          "type": "number"
        },
        "fieldGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldGroupCreateRequest"
          }
        },
        "fieldValues": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "indemnityInAggregate": {
          "type": "string"
        },
        "indemnityPerEvent": {
          "type": "string"
        },
        "indemnityPerItem": {
          "type": "string"
        },
        "locator": {
          "type": "string"
        },
        "lumpSumPayment": {
          "type": "number"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "PerilModificationResponse": {
      "type": "object",
      "required": [
        "exposureModificationLocator",
        "locator",
        "perilLocator",
        "policyholderLocator",
        "policyLocator",
        "premiumChangeCurrency",
        "productLocator"
      ],
      "properties": {
        "exposureModificationLocator": {
          "type": "string"
        },
        "locator": {
          "type": "string"
        },
        "newPerilCharacteristicsLocator": {
          "type": "string"
        },
        "perilLocator": {
          "type": "string"
        },
        "policyholderLocator": {
          "type": "string"
        },
        "policyLocator": {
          "type": "string"
        },
        "premiumChange": {
          "type": "number"
        },
        "premiumChangeCurrency": {
          "type": "string"
        },
        "productLocator": {
          "type": "string"
        },
        "replacedPerilCharacteristicsLocator": {
          "type": "string"
        }
      }
    },
    "PerilPriceChangeResponse": {
      "type": "object",
      "required": [
        "commissions",
        "grossCommissionsChange",
        "grossPremiumChange",
        "grossTaxesChange",
        "name",
        "newGrossCommissions",
        "newGrossPremium",
        "newGrossTaxes",
        "taxes"
      ],
      "properties": {
        "commissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommissionChangeResponse"
          }
        },
        "grossCommissionsChange": {
          "type": "number"
        },
        "grossPremiumChange": {
          "type": "number"
        },
        "grossTaxesChange": {
          "type": "number"
        },
        "locator": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "newGrossCommissions": {
          "type": "number"
        },
        "newGrossPremium": {
          "type": "number"
        },
        "newGrossTaxes": {
          "type": "number"
        },
        "taxes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxChangeResponse"
          }
        }
      }
    },
    "PerilResponse": {
      "type": "object",
      "required": [
        "characteristics",
        "createdTimestamp",
        "displayId",
        "exposureLocator",
        "locator",
        "name",
        "policyholderLocator",
        "policyLocator",
        "productLocator",
        "renewalGroup",
        "updatedTimestamp"
      ],
      "properties": {
        "characteristics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PerilCharacteristicsResponse"
          }
        },
        "createdTimestamp": {
          "type": "timestamp"
        },
        "displayId": {
          "type": "string"
        },
        "exposureLocator": {
          "type": "string"
        },
        "locator": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "policyholderLocator": {
          "type": "string"
        },
        "policyLocator": {
          "type": "string"
        },
        "productLocator": {
          "type": "string"
        },
        "renewalGroup": {
          "type": "string"
        },
        "updatedTimestamp": {
          "type": "timestamp"
        }
      }
    },
    "PerilUpdateRequest": {
      "type": "object",
      "required": [
        "addFieldGroups",
        "fieldValues",
        "perilLocator",
        "removeFieldGroups",
        "updateFieldGroups"
      ],
      "properties": {
        "addFieldGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldGroupCreateRequest"
          }
        },
        "deductible": {
          "type": "number"
        },
        "fieldValues": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "indemnityInAggregate": {
          "type": "string"
        },
        "indemnityPerEvent": {
          "type": "string"
        },
        "indemnityPerItem": {
          "type": "string"
        },
        "lumpSumPayment": {
          "type": "number"
        },
        "perilLocator": {
          "type": "string"
        },
        "removeDeductible": {
          "type": "boolean"
        },
        "removeFieldGroups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "removeIndemnityInAggregate": {
          "type": "boolean"
        },
        "removeIndemnityPerEvent": {
          "type": "boolean"
        },
        "removeIndemnityPerItem": {
          "type": "boolean"
        },
        "removeLumpSumPayment": {
          "type": "boolean"
        },
        "updateFieldGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldGroupUpdateRequest"
          }
        }
      }
    },
    "Policy2Response": {
      "type": "object",
      "required": [
        "characteristics",
        "configVersion",
        "createdTimestamp",
        "displayId",
        "documents",
        "effectiveContractEndTimestamp",
        "exposures",
        "fees",
        "grossFees",
        "grossFeesCurrency",
        "invoices",
        "locator",
        "modifications",
        "originalContractEndTimestamp",
        "originalContractStartTimestamp",
        "policyholderLocator",
        "productLocator",
        "productName",
        "updatedTimestamp"
      ],
      "properties": {
        "cancellation": {
          "$ref": "#/definitions/CancellationInfo"
        },
        "characteristics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyCharacteristicsResponse"
          }
        },
        "configVersion": {
          "type": "integer"
        },
        "createdTimestamp": {
          "type": "timestamp"
        },
        "displayId": {
          "type": "string"
        },
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyDocumentResponse"
          }
        },
        "effectiveContractEndTimestamp": {
          "type": "timestamp"
        },
        "exposures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExposureResponse"
          }
        },
        "fees": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FeeResponse"
          }
        },
        "grossFees": {
          "type": "number"
        },
        "grossFeesCurrency": {
          "type": "string"
        },
        "invoices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyInvoice2Response"
          }
        },
        "issuedTimestamp": {
          "type": "timestamp"
        },
        "locator": {
          "type": "string"
        },
        "modifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyModificationResponse"
          }
        },
        "originalContractEndTimestamp": {
          "type": "timestamp"
        },
        "originalContractStartTimestamp": {
          "type": "timestamp"
        },
        "paymentScheduleName": {
          "type": "string"
        },
        "policyholderLocator": {
          "type": "string"
        },
        "premiumReportName": {
          "type": "string"
        },
        "productLocator": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "quoteSummary": {
          "$ref": "#/definitions/QuoteSummaryResponse"
        },
        "updatedTimestamp": {
          "type": "timestamp"
        }
      }
    },
    "Policy2UpdateRequest": {
      "type": "object",
      "required": [
        "addExposures",
        "addFieldGroups",
        "removeExposures",
        "removeFieldGroups",
        "updateExposures",
        "updateFieldGroups"
      ],
      "properties": {
        "addExposures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExposureCreateRequest"
          }
        },
        "addFieldGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldGroupCreateRequest"
          }
        },
        "effectiveContractEndTimestamp": {
          "type": "timestamp"
        },
        "effectiveContractStartTimestamp": {
          "type": "timestamp"
        },
        "fieldValues": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "finalize": {
          "type": "boolean"
        },
        "paymentScheduleName": {
          "type": "string"
        },
        "policyEndTimestamp": {
          "type": "timestamp"
        },
        "policyStartTimestamp": {
          "type": "timestamp"
        },
        "removeExposures": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "removeFieldGroups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "updateExposures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExposureUpdateRequest"
          }
        },
        "updateFieldGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldGroupUpdateRequest"
          }
        }
      }
    },
    "PolicyCancellationIssueRequest": {
      "type": "object",
      "required": [
        "coverageEndTimestamp"
      ],
      "properties": {
        "coverageEndTimestamp": {
          "type": "timestamp"
        }
      }
    },
    "PolicyCharacteristicsPriceRequest": {
      "type": "object",
      "required": [
        "fieldGroupsByLocator",
        "policyEndTimestamp",
        "policyStartTimestamp"
      ],
      "properties": {
        "fieldGroupsByLocator": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "fieldValues": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "policyEndTimestamp": {
          "type": "timestamp"
        },
        "policyStartTimestamp": {
          "type": "timestamp"
        }
      }
    },
    "PolicyCharacteristicsResponse": {
      "type": "object",
      "required": [
        "createdTimestamp",
        "endTimestamp",
        "fieldGroupsByLocator",
        "fieldValues",
        "grossPremiumCurrency",
        "grossTaxesCurrency",
        "locator",
        "mediaByLocator",
        "policyEndTimestamp",
        "policyholderLocator",
        "policyLocator",
        "policyStartTimestamp",
        "productLocator",
        "startTimestamp",
        "taxGroups",
        "updatedTimestamp"
      ],
      "properties": {
        "createdTimestamp": {
          "type": "timestamp"
        },
        "endTimestamp": {
          "type": "timestamp"
        },
        "fieldGroupsByLocator": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "fieldValues": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "grossPremium": {
          "type": "number"
        },
        "grossPremiumCurrency": {
          "type": "string"
        },
        "grossTaxes": {
          "type": "number"
        },
        "grossTaxesCurrency": {
          "type": "string"
        },
        "issuedTimestamp": {
          "type": "timestamp"
        },
        "locator": {
          "type": "string"
        },
        "mediaByLocator": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Media"
          }
        },
        "policyEndTimestamp": {
          "type": "timestamp"
        },
        "policyholderLocator": {
          "type": "string"
        },
        "policyLocator": {
          "type": "string"
        },
        "policyStartTimestamp": {
          "type": "timestamp"
        },
        "productLocator": {
          "type": "string"
        },
        "replacedTimestamp": {
          "type": "timestamp"
        },
        "startTimestamp": {
          "type": "timestamp"
        },
        "taxGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxGroupResponse"
          }
        },
        "updatedTimestamp": {
          "type": "timestamp"
        }
      }
    },
    "PolicyConfigurationResponse": {
      "type": "object",
      "required": [
        "cancellations",
        "documents",
        "endorsements",
        "exposures",
        "externalDataCalls",
        "fees",
        "fields",
        "invoicing",
        "paymentSchedules",
        "reminders",
        "renewals",
        "taxes"
      ],
      "properties": {
        "cancellations": {
          "$ref": "#/definitions/CancellationConfigurationResponse"
        },
        "defaultPaymentTerms": {
          "$ref": "#/definitions/PaymentTermsResponse"
        },
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyDocumentConfiguration"
          }
        },
        "endorsements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EndorsementConfigurationResponse"
          }
        },
        "exposures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExposureConfigurationResponse"
          }
        },
        "externalDataCalls": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FrontendExternalDataCallConfiguration"
          }
        },
        "externalRater": {
          "type": "string"
        },
        "fees": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FeeConfigurationResponse"
          }
        },
        "fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldConfiguration"
          }
        },
        "invoicing": {
          "$ref": "#/definitions/PolicyInvoicingConfiguration"
        },
        "lapse": {
          "$ref": "#/definitions/LapseConfigurationResponse"
        },
        "paymentSchedules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PaymentScheduleResponse"
          }
        },
        "reminders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReminderConfigurationResponse"
          }
        },
        "renewals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RenewalConfigurationResponse"
          }
        },
        "taxes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxConfigurationResponse"
          }
        }
      }
    },
    "PolicyCreateRequest4": {
      "type": "object",
      "required": [
        "policyholderLocator",
        "productName"
      ],
      "properties": {
        "exposures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExposureCreateRequest"
          }
        },
        "fieldGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldGroupCreateRequest"
          }
        },
        "fieldValues": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "finalize": {
          "type": "boolean"
        },
        "paymentScheduleName": {
          "type": "string"
        },
        "policyEndTimestamp": {
          "type": "timestamp"
        },
        "policyholderLocator": {
          "type": "string"
        },
        "policyStartTimestamp": {
          "type": "timestamp"
        },
        "premiumReportName": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        }
      }
    },
    "PolicyDocumentConfiguration": {
      "type": "object",
      "required": [
        "displayName",
        "fileName",
        "generatingEvent",
        "templateName",
        "type"
      ],
      "properties": {
        "displayName": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "generatingEvent": {
          "type": "string",
          "enum": [
            "quote",
            "accept",
            "issue"
          ]
        },
        "templateName": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "pdf",
            "html"
          ]
        }
      }
    },
    "PolicyDocumentRemoveRequest": {
      "type": "object",
      "required": [
        "documentLocator"
      ],
      "properties": {
        "documentLocator": {
          "type": "string"
        }
      }
    },
    "PolicyDocumentRenderRequest": {
      "type": "object",
      "required": [
        "policyDisplayId",
        "template"
      ],
      "properties": {
        "policyDisplayId": {
          "type": "string"
        },
        "template": {
          "type": "string"
        }
      }
    },
    "PolicyDocumentResponse": {
      "type": "object",
      "required": [
        "displayName",
        "fileName",
        "locator",
        "type",
        "url",
        "urlExpirationTimestamp"
      ],
      "properties": {
        "createdTimestamp": {
          "type": "timestamp"
        },
        "displayName": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "locator": {
          "type": "string"
        },
        "policyModificationLocator": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "pdf",
            "html"
          ]
        },
        "url": {
          "type": "string"
        },
        "urlExpirationTimestamp": {
          "type": "timestamp"
        }
      }
    },
    "PolicyEndorsementIssueRequest": {
      "type": "object",
      "required": [
        "endorsementName"
      ],
      "properties": {
        "endorsementName": {
          "type": "string"
        },
        "newPolicyEndTimestamp": {
          "type": "timestamp"
        },
        "reprice": {
          "type": "boolean"
        },
        "startTimestamp": {
          "type": "timestamp"
        },
        "updatePolicy": {
          "$ref": "#/definitions/EndorsementPolicyUpdateRequest"
        }
      }
    },
    "PolicyExposurePerilPricingRequest": {
      "type": "object",
      "required": [
        "exposureCharacteristicsLocator",
        "perilCharacteristicsLocator",
        "policyCharacteristicsLocator"
      ],
      "properties": {
        "exposureCharacteristicsLocator": {
          "type": "string"
        },
        "perilCharacteristicsLocator": {
          "type": "string"
        },
        "policyCharacteristicsLocator": {
          "type": "string"
        }
      }
    },
    "Policyholder3PageResponse": {
      "type": "object",
      "required": [
        "policyholders"
      ],
      "properties": {
        "pagingToken": {
          "type": "string"
        },
        "policyholders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyholderResponse3"
          }
        }
      }
    },
    "PolicyholderCreateRequest2": {
      "type": "object",
      "required": [],
      "properties": {
        "completed": {
          "type": "boolean"
        },
        "subEntities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubEntityCreateRequest"
          }
        },
        "values": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "PolicyholderResponse3": {
      "type": "object",
      "required": [
        "createdTimestamp",
        "entity",
        "locator",
        "updatedTimestamp",
        "version"
      ],
      "properties": {
        "createdTimestamp": {
          "type": "timestamp"
        },
        "entity": {
          "$ref": "#/definitions/EntityResponse2"
        },
        "locator": {
          "type": "string"
        },
        "updatedTimestamp": {
          "type": "timestamp"
        },
        "version": {
          "type": "integer"
        }
      }
    },
    "PolicyholderUpdateRequest2": {
      "type": "object",
      "required": [
        "completed",
        "locator",
        "version"
      ],
      "properties": {
        "addSubEntities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubEntityCreateRequest"
          }
        },
        "completed": {
          "type": "boolean"
        },
        "deleteSubEntities": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "locator": {
          "type": "string"
        },
        "updateSubEntities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubEntityUpdateRequest"
          }
        },
        "values": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "version": {
          "type": "integer"
        }
      }
    },
    "PolicyInvoice2Response": {
      "type": "object",
      "required": [
        "createdTimestamp",
        "displayId",
        "documents",
        "dueTimestamp",
        "endTimestamp",
        "locator",
        "payments",
        "policyLocator",
        "settlementStatus",
        "startTimestamp",
        "statuses",
        "totalDue",
        "totalDueCurrency",
        "updatedTimestamp"
      ],
      "properties": {
        "createdTimestamp": {
          "type": "timestamp"
        },
        "displayId": {
          "type": "string"
        },
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyDocumentResponse"
          }
        },
        "dueTimestamp": {
          "type": "timestamp"
        },
        "endTimestamp": {
          "type": "timestamp"
        },
        "locator": {
          "type": "string"
        },
        "payments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PaymentResponse2"
          }
        },
        "policyLocator": {
          "type": "string"
        },
        "policyModificationLocator": {
          "type": "string"
        },
        "premiumReportName": {
          "type": "string"
        },
        "settlementStatus": {
          "type": "string",
          "enum": [
            "outstanding",
            "settled"
          ]
        },
        "settlementType": {
          "type": "string",
          "enum": [
            "paid",
            "writtenOff",
            "zeroDue",
            "invalidated",
            "carriedForward"
          ]
        },
        "startTimestamp": {
          "type": "timestamp"
        },
        "statuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyInvoice2StatusAndTimeResponse"
          }
        },
        "totalDue": {
          "type": "number"
        },
        "totalDueCurrency": {
          "type": "string"
        },
        "updatedTimestamp": {
          "type": "timestamp"
        }
      }
    },
    "PolicyInvoice2StatusAndTimeResponse": {
      "type": "object",
      "required": [
        "status",
        "timestamp"
      ],
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "unfulfilled",
            "paid",
            "writtenOff",
            "zeroDue",
            "invalidated",
            "carriedForward"
          ]
        },
        "timestamp": {
          "type": "timestamp"
        }
      }
    },
    "PolicyInvoicingConfiguration": {
      "type": "object",
      "required": [
        "generatingEvent"
      ],
      "properties": {
        "generatingEvent": {
          "type": "string",
          "enum": [
            "quote",
            "accept",
            "issue"
          ]
        }
      }
    },
    "PolicyModificationResponse": {
      "type": "object",
      "required": [
        "createdTimestamp",
        "displayId",
        "exposureModifications",
        "fieldGroupsByLocator",
        "fieldValues",
        "locator",
        "mediaByLocator",
        "name",
        "newPolicyCharacteristicsLocators",
        "number",
        "policyholderLocator",
        "policyLocator",
        "premiumChangeCurrency",
        "productLocator",
        "updatedTimestamp"
      ],
      "properties": {
        "automatedUnderwritingResult": {
          "$ref": "#/definitions/AutomatedUnderwritingResultResponse"
        },
        "createdTimestamp": {
          "type": "timestamp"
        },
        "displayId": {
          "type": "string"
        },
        "effectiveTimestamp": {
          "type": "timestamp"
        },
        "endorsementLocator": {
          "type": "string"
        },
        "exposureModifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExposureModificationResponse"
          }
        },
        "fieldGroupsByLocator": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "fieldValues": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "issuedTimestamp": {
          "type": "timestamp"
        },
        "locator": {
          "type": "string"
        },
        "mediaByLocator": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Media"
          }
        },
        "name": {
          "type": "string"
        },
        "newPolicyCharacteristicsLocator": {
          "type": "string"
        },
        "newPolicyCharacteristicsLocators": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "number": {
          "type": "integer"
        },
        "policyholderLocator": {
          "type": "string"
        },
        "policyLocator": {
          "type": "string"
        },
        "premiumChange": {
          "type": "number"
        },
        "premiumChangeCurrency": {
          "type": "string"
        },
        "productLocator": {
          "type": "string"
        },
        "renewalLocator": {
          "type": "string"
        },
        "updatedTimestamp": {
          "type": "timestamp"
        }
      }
    },
    "PolicyPriceChangeResponse": {
      "type": "object",
      "required": [
        "commissions",
        "exposurePrices",
        "fees",
        "grossCommissionsChange",
        "grossFeesChange",
        "grossPremiumChange",
        "grossTaxesChange",
        "newGrossCommissions",
        "newGrossFees",
        "newGrossPremium",
        "newGrossTaxes",
        "newTotal",
        "taxGroups",
        "totalChange"
      ],
      "properties": {
        "commissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommissionChangeResponse"
          }
        },
        "exposurePrices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExposurePriceChangeResponse"
          }
        },
        "fees": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FeeChangeResponse"
          }
        },
        "grossCommissionsChange": {
          "type": "number"
        },
        "grossFeesChange": {
          "type": "number"
        },
        "grossPremiumChange": {
          "type": "number"
        },
        "grossTaxesChange": {
          "type": "number"
        },
        "newGrossCommissions": {
          "type": "number"
        },
        "newGrossFees": {
          "type": "number"
        },
        "newGrossPremium": {
          "type": "number"
        },
        "newGrossTaxes": {
          "type": "number"
        },
        "newTotal": {
          "type": "number"
        },
        "taxGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxChangeResponse"
          }
        },
        "totalChange": {
          "type": "number"
        }
      }
    },
    "PolicyPriceResponse": {
      "type": "object",
      "required": [
        "commissions",
        "exposurePrices",
        "fees",
        "grossCommissions",
        "grossCommissionsCurrency",
        "grossFees",
        "grossFeesCurrency",
        "grossPremium",
        "grossPremiumCurrency",
        "grossTaxes",
        "grossTaxesCurrency",
        "grossTechnicalPremiumCurrency",
        "premiumsByExposureLocator",
        "premiumsByPerilLocator",
        "taxGroups",
        "totalDue",
        "totalDueCurrency"
      ],
      "properties": {
        "commissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommissionResponse"
          }
        },
        "exposurePrices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetExposurePriceResponse"
          }
        },
        "fees": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FeeResponse"
          }
        },
        "grossCommissions": {
          "type": "number"
        },
        "grossCommissionsCurrency": {
          "type": "string"
        },
        "grossFees": {
          "type": "number"
        },
        "grossFeesCurrency": {
          "type": "string"
        },
        "grossPremium": {
          "type": "number"
        },
        "grossPremiumCurrency": {
          "type": "string"
        },
        "grossTaxes": {
          "type": "number"
        },
        "grossTaxesCurrency": {
          "type": "string"
        },
        "grossTechnicalPremium": {
          "type": "number"
        },
        "grossTechnicalPremiumCurrency": {
          "type": "string"
        },
        "premiumsByExposureLocator": {
          "type": "object",
          "additionalProperties": {
            "type": "number"
          }
        },
        "premiumsByPerilLocator": {
          "type": "object",
          "additionalProperties": {
            "type": "number"
          }
        },
        "taxGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxGroupResponse"
          }
        },
        "totalDue": {
          "type": "number"
        },
        "totalDueCurrency": {
          "type": "string"
        }
      }
    },
    "PolicyQuoteInvoiceResponse": {
      "type": "object",
      "required": [
        "endTimestamp",
        "financialTransactions",
        "issueTimestamp",
        "startTimestamp"
      ],
      "properties": {
        "endTimestamp": {
          "type": "timestamp"
        },
        "financialTransactions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FinancialTransactionResponse"
          }
        },
        "issueTimestamp": {
          "type": "timestamp"
        },
        "startTimestamp": {
          "type": "timestamp"
        }
      }
    },
    "PolicyQuoteListResponse": {
      "type": "object",
      "required": [
        "quotes"
      ],
      "properties": {
        "quotes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyQuoteResponse"
          }
        }
      }
    },
    "PolicyQuoteResponse": {
      "type": "object",
      "required": [
        "characteristics",
        "contractEndTimestamp",
        "contractStartTimestamp",
        "createdTimestamp",
        "documents",
        "exposures",
        "fees",
        "invoices",
        "locator",
        "name",
        "policyholderLocator",
        "policyLocator",
        "productLocator",
        "productName",
        "selected",
        "state",
        "updatedTimestamp"
      ],
      "properties": {
        "automatedUnderwritingResult": {
          "$ref": "#/definitions/AutomatedUnderwritingResultResponse"
        },
        "characteristics": {
          "$ref": "#/definitions/PolicyCharacteristicsResponse"
        },
        "contractEndTimestamp": {
          "type": "timestamp"
        },
        "contractStartTimestamp": {
          "type": "timestamp"
        },
        "createdTimestamp": {
          "type": "timestamp"
        },
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyDocumentResponse"
          }
        },
        "exposures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExposureResponse"
          }
        },
        "fees": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FeeResponse"
          }
        },
        "grossFees": {
          "type": "number"
        },
        "grossFeesCurrency": {
          "type": "string"
        },
        "invoices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyQuoteInvoiceResponse"
          }
        },
        "issuedTimestamp": {
          "type": "timestamp"
        },
        "locator": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "paymentScheduleName": {
          "type": "string"
        },
        "policyholderLocator": {
          "type": "string"
        },
        "policyLocator": {
          "type": "string"
        },
        "productLocator": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "selected": {
          "type": "boolean"
        },
        "state": {
          "type": "string",
          "enum": [
            "draft",
            "quoted",
            "accepted",
            "declined",
            "discarded"
          ]
        },
        "updatedTimestamp": {
          "type": "timestamp"
        }
      }
    },
    "PolicyQuoteUpdateRequest": {
      "type": "object",
      "required": [],
      "properties": {
        "addExposures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExposureCreateRequest"
          }
        },
        "addFieldGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldGroupCreateRequest"
          }
        },
        "fieldValues": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "name": {
          "type": "string"
        },
        "paymentScheduleName": {
          "type": "string"
        },
        "policyEndTimestamp": {
          "type": "timestamp"
        },
        "policyStartTimestamp": {
          "type": "timestamp"
        },
        "removeExposures": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "removeFieldGroups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "updateExposures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExposureUpdateRequest"
          }
        },
        "updateFieldGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldGroupUpdateRequest"
          }
        }
      }
    },
    "PolicyReportRequest": {
      "type": "object",
      "required": [],
      "properties": {
        "exposureFields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "perilFields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "policyFields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "productNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "reportEndTimestamp": {
          "type": "timestamp"
        },
        "reportStartTimestamp": {
          "type": "timestamp"
        },
        "reportTimestamp": {
          "type": "timestamp"
        }
      }
    },
    "PremiumReportCreateRequest": {
      "type": "object",
      "required": [
        "endTimestamp",
        "fieldGroups",
        "fieldValues"
      ],
      "properties": {
        "endTimestamp": {
          "type": "timestamp"
        },
        "fieldGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldGroupCreateRequest"
          }
        },
        "fieldValues": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "invoiceDueTimestamp": {
          "type": "timestamp"
        },
        "issue": {
          "type": "boolean"
        }
      }
    },
    "PremiumReportingConfigurationResponse": {
      "type": "object",
      "required": [
        "documents",
        "fields",
        "id",
        "premiumReportingCalculationRevision",
        "productRevisionLocator",
        "reportName",
        "tenantLocator"
      ],
      "properties": {
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyDocumentConfiguration"
          }
        },
        "fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldConfiguration"
          }
        },
        "id": {
          "type": "string"
        },
        "premiumReportingCalculationRevision": {
          "type": "string"
        },
        "productRevisionLocator": {
          "type": "string"
        },
        "reportName": {
          "type": "string"
        },
        "tenantLocator": {
          "type": "string"
        }
      }
    },
    "PremiumReportingDocumentResponse": {
      "type": "object",
      "required": [
        "displayName",
        "fileName",
        "locator",
        "premiumReportLocator",
        "type",
        "url",
        "urlExpirationTimestamp"
      ],
      "properties": {
        "createdTimestamp": {
          "type": "timestamp"
        },
        "displayName": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "locator": {
          "type": "string"
        },
        "premiumReportLocator": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "pdf",
            "html"
          ]
        },
        "url": {
          "type": "string"
        },
        "urlExpirationTimestamp": {
          "type": "timestamp"
        }
      }
    },
    "PremiumReportingInvoiceResponse": {
      "type": "object",
      "required": [
        "createdTimestamp",
        "displayId",
        "documents",
        "dueTimestamp",
        "endTimestamp",
        "locator",
        "payments",
        "policyholderLocator",
        "policyLocator",
        "premiumReportLocator",
        "premiumReportName",
        "settlementStatus",
        "startTimestamp",
        "statuses",
        "totalDue",
        "totalDueCurrency",
        "updatedTimestamp"
      ],
      "properties": {
        "createdTimestamp": {
          "type": "timestamp"
        },
        "displayId": {
          "type": "string"
        },
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PremiumReportingDocumentResponse"
          }
        },
        "dueTimestamp": {
          "type": "timestamp"
        },
        "endTimestamp": {
          "type": "timestamp"
        },
        "locator": {
          "type": "string"
        },
        "payments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PremiumReportingPaymentResponse"
          }
        },
        "policyholderLocator": {
          "type": "string"
        },
        "policyLocator": {
          "type": "string"
        },
        "premiumReportLocator": {
          "type": "string"
        },
        "premiumReportName": {
          "type": "string"
        },
        "settlementStatus": {
          "type": "string",
          "enum": [
            "outstanding",
            "settled"
          ]
        },
        "settlementType": {
          "type": "string",
          "enum": [
            "paid",
            "writtenOff",
            "zeroDue",
            "invalidated",
            "carriedForward"
          ]
        },
        "startTimestamp": {
          "type": "timestamp"
        },
        "statuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PremiumReportingInvoiceStatusAndTimeResponse"
          }
        },
        "totalDue": {
          "type": "number"
        },
        "totalDueCurrency": {
          "type": "string"
        },
        "updatedTimestamp": {
          "type": "timestamp"
        }
      }
    },
    "PremiumReportingInvoiceStatusAndTimeResponse": {
      "type": "object",
      "required": [
        "status",
        "timestamp"
      ],
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "unfulfilled",
            "paid",
            "writtenOff",
            "zeroDue",
            "invalidated",
            "carriedForward"
          ]
        },
        "timestamp": {
          "type": "timestamp"
        }
      }
    },
    "PremiumReportingPaymentResponse": {
      "type": "object",
      "required": [
        "amount",
        "amountCurrency",
        "displayId",
        "fieldValues",
        "invoiceLocator",
        "locator",
        "mediaByLocator",
        "policyholderLocator",
        "postedTimestamp",
        "tenantLocator"
      ],
      "properties": {
        "amount": {
          "type": "number"
        },
        "amountCurrency": {
          "type": "string"
        },
        "displayId": {
          "type": "string"
        },
        "fieldValues": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "invoiceLocator": {
          "type": "string"
        },
        "locator": {
          "type": "string"
        },
        "mediaByLocator": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Media"
          }
        },
        "policyholderLocator": {
          "type": "string"
        },
        "postedTimestamp": {
          "type": "timestamp"
        },
        "reversedTimestamp": {
          "type": "timestamp"
        },
        "tenantLocator": {
          "type": "string"
        }
      }
    },
    "PremiumReportPremiumResponse": {
      "type": "object",
      "required": [
        "category",
        "premium"
      ],
      "properties": {
        "category": {
          "type": "string"
        },
        "premium": {
          "type": "number"
        }
      }
    },
    "PremiumReportResponse": {
      "type": "object",
      "required": [
        "commissions",
        "configVersion",
        "createdTimestamp",
        "displayId",
        "documents",
        "endTimestamp",
        "fees",
        "fieldErrors",
        "fieldGroupsByLocator",
        "fieldValues",
        "grossCommissions",
        "grossFees",
        "grossPremium",
        "grossTaxes",
        "invoiceDueTimestamp",
        "issuedTimestamp",
        "locator",
        "policyLocator",
        "premiums",
        "startTimestamp",
        "state",
        "taxGroups",
        "updatedTimestamp"
      ],
      "properties": {
        "commissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommissionResponse"
          }
        },
        "configVersion": {
          "type": "integer"
        },
        "createdTimestamp": {
          "type": "timestamp"
        },
        "displayId": {
          "type": "string"
        },
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PremiumReportingDocumentResponse"
          }
        },
        "endTimestamp": {
          "type": "timestamp"
        },
        "fees": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FeeResponse"
          }
        },
        "fieldErrors": {
          "$ref": "#/definitions/FieldErrors"
        },
        "fieldGroupsByLocator": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "fieldValues": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "grossCommissions": {
          "type": "number"
        },
        "grossFees": {
          "type": "number"
        },
        "grossPremium": {
          "type": "number"
        },
        "grossTaxes": {
          "type": "number"
        },
        "invoice": {
          "$ref": "#/definitions/PremiumReportingInvoiceResponse"
        },
        "invoiceDueTimestamp": {
          "type": "timestamp"
        },
        "issuedTimestamp": {
          "type": "timestamp"
        },
        "locator": {
          "type": "string"
        },
        "policyLocator": {
          "type": "string"
        },
        "premiums": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PremiumReportPremiumResponse"
          }
        },
        "startTimestamp": {
          "type": "timestamp"
        },
        "state": {
          "type": "string",
          "enum": [
            "draft",
            "discarded",
            "issued",
            "revised",
            "reversed"
          ]
        },
        "taxGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxGroupResponse"
          }
        },
        "updatedTimestamp": {
          "type": "timestamp"
        }
      }
    },
    "PremiumReportUpdateRequest": {
      "type": "object",
      "required": [],
      "properties": {
        "endTimestamp": {
          "type": "timestamp"
        },
        "fieldGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldGroupCreateRequest"
          }
        },
        "fieldValues": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "invoiceDueTimestamp": {
          "type": "timestamp"
        }
      }
    },
    "ProductConfiguration2Response": {
      "type": "object",
      "required": [
        "name",
        "policyConfiguration"
      ],
      "properties": {
        "claimConfiguration": {
          "$ref": "#/definitions/ClaimConfigurationResponse"
        },
        "configVersion": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "policyConfiguration": {
          "$ref": "#/definitions/PolicyConfigurationResponse"
        },
        "premiumReportingConfiguration": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PremiumReportingConfigurationResponse"
          }
        }
      }
    },
    "QueryRequest": {
      "type": "object",
      "required": [],
      "properties": {
        "limit": {
          "type": "integer"
        },
        "maxTimestamp": {
          "type": "timestamp"
        },
        "minTimestamp": {
          "type": "timestamp"
        },
        "oldestComeFirst": {
          "type": "boolean"
        },
        "position": {
          "type": "string"
        },
        "requestId": {
          "type": "string"
        },
        "searchPhrase": {
          "type": "string"
        }
      }
    },
    "QueryResponse": {
      "type": "object",
      "required": [
        "logEvents",
        "nextPosition"
      ],
      "properties": {
        "logEvents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogEvent"
          }
        },
        "nextPosition": {
          "type": "string"
        }
      }
    },
    "QuoteSummaryResponse": {
      "type": "object",
      "required": [
        "notDiscarded",
        "selected"
      ],
      "properties": {
        "notDiscarded": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QuoteSummaryResponseItem"
          }
        },
        "selected": {
          "type": "string"
        }
      }
    },
    "QuoteSummaryResponseItem": {
      "type": "object",
      "required": [
        "locator",
        "name",
        "state"
      ],
      "properties": {
        "locator": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "state": {
          "type": "string",
          "enum": [
            "draft",
            "quoted",
            "accepted",
            "declined",
            "discarded"
          ]
        }
      }
    },
    "ReinstatementAmountDueRequest": {
      "type": "object",
      "required": [
        "reinstatementTimestamp"
      ],
      "properties": {
        "reinstatementTimestamp": {
          "type": "timestamp"
        }
      }
    },
    "ReinstatementAmountDueResponse": {
      "type": "object",
      "required": [
        "grossFeesDue",
        "grossPremiumDue",
        "grossTaxesDue",
        "totalDue"
      ],
      "properties": {
        "grossFeesDue": {
          "type": "number"
        },
        "grossPremiumDue": {
          "type": "number"
        },
        "grossTaxesDue": {
          "type": "number"
        },
        "totalDue": {
          "type": "number"
        }
      }
    },
    "ReinstatementConfigurationResponse": {
      "type": "object",
      "required": [
        "documents"
      ],
      "properties": {
        "defaultDeadlineDays": {
          "type": "integer"
        },
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyDocumentConfiguration"
          }
        }
      }
    },
    "ReinstatementDocumentRemoveRequest": {
      "type": "object",
      "required": [
        "documentLocator"
      ],
      "properties": {
        "documentLocator": {
          "type": "string"
        }
      }
    },
    "ReinstatementInvoiceRequest": {
      "type": "object",
      "required": [
        "reinstatementTimestamp"
      ],
      "properties": {
        "reinstatementTimestamp": {
          "type": "timestamp"
        }
      }
    },
    "ReinstatementRequest": {
      "type": "object",
      "required": [],
      "properties": {
        "effectiveTimestamp": {
          "type": "timestamp",
          "description": "\"The time at which the reinstatement should start, as a unix timestamp. This time must \"+\"be a value that is within the range of the cancellation that is being reinstated. If this parameter \"+\"is not supplied then the value will default to the start timestamp of the cancellation being \"+\"reinstated.\""
        },
        "issue": {
          "type": "boolean",
          "description": "\"When false this parameter specifies that a reinstatement should be created and left \"+\"in the draft state. When this parameter is true, then the reinstatement will be created, accepted, \"+\"and issued all in one shot. If not specified then the value for this parameter defaults to false.\""
        },
        "reinstatementDeadlineTimestamp": {
          "type": "timestamp",
          "description": "\"The lastest time at which this reinstatement will be eligible to be issued, as \"+\"a unix timestamp. If \"+\"a reinstatement is in the accepted state and the reinstatement deadline passes then the system \"+\"will automatically expire the reinstatement. If the reinstatement deadline passes with the \"+\"reinstatement in the draft state then the user will have to increase this timestamp, using the update \"+\"API endpoint, in order to advance the reinstatement into the accepted or issued states. If this \"+\"parameter is not set then the deadline timestamp will default to infinity.\""
        }
      }
    },
    "ReinstatementResponse": {
      "type": "object",
      "required": [
        "cancellationLocator",
        "createdTimestamp",
        "documents",
        "effectiveTimestamp",
        "locator",
        "state",
        "updatedTimestamp"
      ],
      "properties": {
        "cancellationLocator": {
          "type": "string",
          "description": "The unique identifier to the cancellation that the resinstatement reinstates"
        },
        "createdTimestamp": {
          "type": "timestamp",
          "description": "The unix timestamp of the reinstatement creation event"
        },
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyDocumentResponse",
            "description": "All documents generated by the reinstatement accept or issue event"
          }
        },
        "effectiveTimestamp": {
          "type": "timestamp",
          "description": "The unix timestamp from which the reinstatement starts"
        },
        "invoiceLocator": {
          "type": "string",
          "description": "The first invoice generated by the reinstatement accept or issue event"
        },
        "issuedTimestamp": {
          "type": "timestamp",
          "description": "\"The unix timestamp at which the reinstatement was issued. This field is only returned \"+\"if the reinstatement has been issued.\""
        },
        "locator": {
          "type": "string",
          "description": "A unique identifier associated with the reinstatement"
        },
        "price": {
          "$ref": "#/definitions/PolicyPriceChangeResponse",
          "description": "\"Price change information for the reinstatement. This object will be available \"+\"when information on a single object is returned from the API. It may be available if a list of \"+\"reinstatements is returned form the API or if the reinstatement response is nested within a parent object.\""
        },
        "reinstatementDeadlineTimestamp": {
          "type": "timestamp",
          "description": "\"A unix timestamp representing the last time at which the reinstatement is valid to \"+\"be issued. This value is returned if set. If not set there is no time out on the reinstatement.\""
        },
        "reinstatementPaymentAmount": {
          "type": "number",
          "description": "\"The amount the customer needs to pay to reinstate the cancellation. Currently field \"+\"will be the value of the first invoice generated by the reinstatement and will be available on the \"+\"response once the reinstatement is in the accept or issue state.\""
        },
        "state": {
          "type": "string",
          "enum": [
            "draft",
            "accepted",
            "issued",
            "expired"
          ],
          "description": "The state of the reinstatement"
        },
        "updatedTimestamp": {
          "type": "timestamp",
          "description": "The unix timestamp of the last reinstatement update"
        }
      }
    },
    "ReinstatementStatusAndTimeResponse": {
      "type": "object",
      "required": [
        "status",
        "timestamp"
      ],
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "open",
            "closed",
            "invoiced",
            "issued"
          ]
        },
        "timestamp": {
          "type": "timestamp"
        }
      }
    },
    "ReinstatementUpdateRequest": {
      "type": "object",
      "required": [],
      "properties": {
        "effectiveTimestamp": {
          "type": "timestamp",
          "description": "\"The time at which the reinstatement should start, as a unix timestamp. This time must \"+\"be a value that is within the range of the cancellation that is being reinstated.\""
        },
        "reinstatementDeadlineTimestamp": {
          "type": "timestamp",
          "description": "\"The lastest time at which this reinstatement will be eligible to be issued, as a \"+\"unix timestamp. If \"+\"a reinstatement is in the accepted state and the reinstatement deadline passes then the system \"+\"will automatically expire the reinstatement. If the reinstatement deadline passes with the \"+\"reinstatement in the draft state then the user will have to increase this timestamp, using the update \"+\"API endpoint, in order to advance the reinstatement into the accepted or issued states. If you would \"+\"like to set this parameter to infinity, then the best way to do that in an update request to set\"+\"this parameter to a very large value, like unix_time('9999-01-01').\""
        }
      }
    },
    "ReminderConfigurationResponse": {
      "type": "object",
      "required": [
        "enabled",
        "from",
        "name",
        "offset"
      ],
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "from": {
          "type": "string",
          "enum": [
            "policy.end"
          ]
        },
        "name": {
          "type": "string"
        },
        "offset": {
          "type": "string"
        }
      }
    },
    "RenewalActionRequest": {
      "type": "object",
      "required": [],
      "properties": {
        "action": {
          "type": "string",
          "enum": [
            "discard",
            "quote",
            "accept",
            "issue",
            "invalidate",
            "update"
          ]
        },
        "conflictHandling": {
          "type": "string",
          "enum": [
            "block",
            "invalidate"
          ]
        },
        "renewalUpdate": {
          "$ref": "#/definitions/RenewalUpdateRequest"
        }
      }
    },
    "RenewalConfigurationResponse": {
      "type": "object",
      "required": [
        "documents"
      ],
      "properties": {
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyDocumentConfiguration"
          }
        }
      }
    },
    "RenewalCreateRequest": {
      "type": "object",
      "required": [
        "renewalEndTimestamp"
      ],
      "properties": {
        "addExposures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExposureCreateRequest"
          }
        },
        "addFieldGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldGroupCreateRequest"
          }
        },
        "endExposures": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "fieldValues": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "removeFieldGroups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "renewalEndTimestamp": {
          "type": "timestamp"
        },
        "state": {
          "type": "string",
          "enum": [
            "application",
            "quoted",
            "accepted",
            "issued"
          ]
        },
        "updateExposures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RenewalExposureUpdateRequest"
          }
        },
        "updateFieldGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldGroupUpdateRequest"
          }
        }
      }
    },
    "RenewalExposureUpdateRequest": {
      "type": "object",
      "required": [
        "addFieldGroups",
        "addPerils",
        "endPerils",
        "exposureLocator",
        "fieldValues",
        "removeFieldGroups",
        "updateFieldGroups",
        "updatePerils"
      ],
      "properties": {
        "addFieldGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldGroupCreateRequest"
          }
        },
        "addPerils": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PerilCreateRequest"
          }
        },
        "endPerils": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "exposureLocator": {
          "type": "string"
        },
        "fieldValues": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "removeFieldGroups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "updateFieldGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldGroupUpdateRequest"
          }
        },
        "updatePerils": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PerilUpdateRequest"
          }
        }
      }
    },
    "RenewalIssueRequest": {
      "type": "object",
      "required": [
        "renewalEndTimestamp"
      ],
      "properties": {
        "policyUpdateRequest": {
          "$ref": "#/definitions/RenewalPolicyUpdateRequest"
        },
        "renewalEndTimestamp": {
          "type": "timestamp"
        }
      }
    },
    "RenewalPolicyUpdateRequest": {
      "type": "object",
      "required": [
        "addExposures",
        "addFieldGroups",
        "endExposures",
        "removeFieldGroups",
        "updateExposures",
        "updateFieldGroups"
      ],
      "properties": {
        "addExposures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExposureCreateRequest"
          }
        },
        "addFieldGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldGroupCreateRequest"
          }
        },
        "endExposures": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "fieldValues": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "removeFieldGroups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "updateExposures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RenewalExposureUpdateRequest"
          }
        },
        "updateFieldGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldGroupUpdateRequest"
          }
        }
      }
    },
    "RenewalResponse": {
      "type": "object",
      "required": [
        "addExposures",
        "addFieldGroups",
        "createdTimestamp",
        "documents",
        "endExposures",
        "fieldValues",
        "locator",
        "policyholderLocator",
        "policyLocator",
        "productLocator",
        "removeFieldGroups",
        "renewalEndTimestamp",
        "renewalStartTimestamp",
        "state",
        "updatedTimestamp",
        "updateExposures",
        "updateFieldGroups"
      ],
      "properties": {
        "addExposures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExposureCreateRequest"
          }
        },
        "addFieldGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldGroupCreateRequest"
          }
        },
        "automatedUnderwritingResult": {
          "$ref": "#/definitions/AutomatedUnderwritingResultResponse"
        },
        "createdTimestamp": {
          "type": "timestamp"
        },
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyDocumentResponse"
          }
        },
        "endExposures": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "fieldValues": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "invoice": {
          "$ref": "#/definitions/PolicyInvoice2Response"
        },
        "issuedTimestamp": {
          "type": "timestamp"
        },
        "locator": {
          "type": "string"
        },
        "plannedInvoices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FutureInvoiceResponse"
          }
        },
        "policyholderLocator": {
          "type": "string"
        },
        "policyLocator": {
          "type": "string"
        },
        "price": {
          "$ref": "#/definitions/PolicyPriceChangeResponse"
        },
        "productLocator": {
          "type": "string"
        },
        "removeFieldGroups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "renewalEndTimestamp": {
          "type": "timestamp"
        },
        "renewalStartTimestamp": {
          "type": "timestamp"
        },
        "state": {
          "type": "string",
          "enum": [
            "application",
            "quoted",
            "accepted",
            "issued",
            "invalidated",
            "discarded"
          ]
        },
        "updatedTimestamp": {
          "type": "timestamp"
        },
        "updateExposures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RenewalExposureUpdateRequest"
          }
        },
        "updateFieldGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldGroupUpdateRequest"
          }
        }
      }
    },
    "RenewalUpdateRequest": {
      "type": "object",
      "required": [],
      "properties": {
        "addExposures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExposureCreateRequest"
          }
        },
        "addFieldGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldGroupCreateRequest"
          }
        },
        "endExposures": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "fieldValues": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "removeFieldGroups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "renewalEndTimestamp": {
          "type": "timestamp"
        },
        "updateExposures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RenewalExposureUpdateRequest"
          }
        },
        "updateFieldGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldGroupUpdateRequest"
          }
        }
      }
    },
    "ReportPreviewResponse": {
      "type": "object",
      "required": [
        "headers",
        "limitReached",
        "previewRows"
      ],
      "properties": {
        "headers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "limitReached": {
          "type": "boolean"
        },
        "previewRows": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "ReportResponse": {
      "type": "object",
      "required": [
        "headers",
        "limitReached",
        "previewRows"
      ],
      "properties": {
        "headers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "limitReached": {
          "type": "boolean"
        },
        "previewRows": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "resultUrl": {
          "type": "string"
        }
      }
    },
    "ReportStatusResponse": {
      "type": "object",
      "required": [
        "createdTimestamp",
        "locator",
        "status",
        "updatedTimestamp"
      ],
      "properties": {
        "createdTimestamp": {
          "type": "timestamp"
        },
        "error": {
          "type": "string"
        },
        "locator": {
          "type": "string"
        },
        "resultUrl": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "started",
            "complete",
            "failed"
          ]
        },
        "updatedTimestamp": {
          "type": "timestamp"
        }
      }
    },
    "ReserveHistoryResponse": {
      "type": "object",
      "required": [
        "expenseReserveHistory",
        "lossReserveHistory",
        "reserveCurrency"
      ],
      "properties": {
        "expenseReserveHistory": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReserveVersionResponse"
          }
        },
        "lossReserveHistory": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReserveVersionResponse"
          }
        },
        "reserveCurrency": {
          "type": "string"
        }
      }
    },
    "ReserveResponse": {
      "type": "object",
      "required": [
        "createdTimestamp",
        "currentAmount",
        "updatedTimestamp"
      ],
      "properties": {
        "createdTimestamp": {
          "type": "timestamp"
        },
        "currentAmount": {
          "type": "number"
        },
        "updatedTimestamp": {
          "type": "timestamp"
        }
      }
    },
    "ReserveSetRequest": {
      "type": "object",
      "required": [
        "amount"
      ],
      "properties": {
        "amount": {
          "type": "number"
        }
      }
    },
    "ReservesReportRequest": {
      "type": "object",
      "required": [
        "reportTimestamp"
      ],
      "properties": {
        "reportTimestamp": {
          "type": "timestamp"
        }
      }
    },
    "ReservesResponse": {
      "type": "object",
      "required": [
        "history"
      ],
      "properties": {
        "history": {
          "$ref": "#/definitions/ReserveHistoryResponse"
        }
      }
    },
    "ReserveVersionResponse": {
      "type": "object",
      "required": [
        "amount",
        "timestamp"
      ],
      "properties": {
        "amount": {
          "type": "number"
        },
        "timestamp": {
          "type": "timestamp"
        }
      }
    },
    "RunReportResponse": {
      "type": "object",
      "required": [
        "locator"
      ],
      "properties": {
        "locator": {
          "type": "string"
        }
      }
    },
    "SelectFieldConfiguration": {
      "type": "object",
      "required": [
        "name",
        "order",
        "title",
        "values"
      ],
      "properties": {
        "condition": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "heading": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "newline": {
          "type": "boolean"
        },
        "optional": {
          "type": "boolean"
        },
        "order": {
          "type": "integer"
        },
        "repeatable": {
          "type": "boolean"
        },
        "title": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "width": {
          "type": "integer"
        }
      }
    },
    "SsoAccountResponse": {
      "type": "object",
      "required": [
        "accountName",
        "accountType",
        "accountUuid"
      ],
      "properties": {
        "accountName": {
          "type": "string"
        },
        "accountType": {
          "type": "string"
        },
        "accountUuid": {
          "type": "string"
        },
        "ontologyUuid": {
          "type": "string"
        },
        "tenantName": {
          "type": "string"
        },
        "tenantTimezone": {
          "type": "string"
        },
        "tenantType": {
          "type": "string"
        },
        "tenantUuid": {
          "type": "string"
        }
      }
    },
    "SsoAddInternalAccountRequest": {
      "type": "object",
      "required": [
        "email",
        "firstName",
        "lastName",
        "type",
        "username"
      ],
      "properties": {
        "email": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "hostName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "SsoFindByHostnameRequest": {
      "type": "object",
      "required": [
        "hostName"
      ],
      "properties": {
        "cursor": {
          "type": "string"
        },
        "hostName": {
          "type": "string"
        },
        "limit": {
          "type": "integer"
        }
      }
    },
    "SsoFindByTenantRequest": {
      "type": "object",
      "required": [
        "tenant"
      ],
      "properties": {
        "cursor": {
          "type": "string"
        },
        "limit": {
          "type": "integer"
        },
        "tenant": {
          "type": "string"
        }
      }
    },
    "SsoFindTenantsForAdminResponse": {
      "type": "object",
      "required": [
        "hostName",
        "tenant"
      ],
      "properties": {
        "hostName": {
          "type": "string"
        },
        "tenant": {
          "type": "string"
        }
      }
    },
    "SsoQueryLogRequest": {
      "type": "object",
      "required": [
        "hostName"
      ],
      "properties": {
        "hostName": {
          "type": "string"
        },
        "limit": {
          "type": "integer"
        },
        "maxTimestamp": {
          "type": "timestamp"
        },
        "minTimestamp": {
          "type": "timestamp"
        },
        "oldestComeFirst": {
          "type": "boolean"
        },
        "position": {
          "type": "string"
        },
        "requestId": {
          "type": "string"
        },
        "searchPhrase": {
          "type": "string"
        }
      }
    },
    "StringFieldConfiguration": {
      "type": "object",
      "required": [
        "name",
        "order",
        "title"
      ],
      "properties": {
        "condition": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "heading": {
          "type": "string"
        },
        "maximum": {
          "type": "integer"
        },
        "multiline": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "newline": {
          "type": "boolean"
        },
        "optional": {
          "type": "boolean"
        },
        "order": {
          "type": "integer"
        },
        "regex": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "width": {
          "type": "integer"
        }
      }
    },
    "SubClaimConfigurationResponse": {
      "type": "object",
      "required": [
        "fields"
      ],
      "properties": {
        "fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldConfiguration"
          }
        }
      }
    },
    "SubClaimCreateRequest": {
      "type": "object",
      "required": [
        "fieldGroups",
        "perilLocator"
      ],
      "properties": {
        "expenseReserve": {
          "$ref": "#/definitions/ReserveSetRequest"
        },
        "fieldGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldGroupCreateRequest"
          }
        },
        "fieldValues": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "lossReserve": {
          "$ref": "#/definitions/ReserveSetRequest"
        },
        "perilLocator": {
          "type": "string"
        }
      }
    },
    "SubClaimLedger": {
      "type": "object",
      "required": [
        "lineItems"
      ],
      "properties": {
        "lineItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LedgerLineItem"
          }
        }
      }
    },
    "SubClaimPayableCreateRequest": {
      "type": "object",
      "required": [
        "amount",
        "reserveType",
        "subClaimLocator"
      ],
      "properties": {
        "amount": {
          "type": "number"
        },
        "comment": {
          "type": "string"
        },
        "recipient": {
          "type": "string"
        },
        "reserveType": {
          "type": "string",
          "enum": [
            "loss",
            "expense"
          ]
        },
        "subClaimLocator": {
          "type": "string"
        }
      }
    },
    "SubClaimPayableListsResponse": {
      "type": "object",
      "required": [
        "expensePayables",
        "lossPayables",
        "reserveCurrency"
      ],
      "properties": {
        "expensePayables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubClaimPayableResponse"
          }
        },
        "lossPayables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubClaimPayableResponse"
          }
        },
        "reserveCurrency": {
          "type": "string"
        }
      }
    },
    "SubClaimPayableResponse": {
      "type": "object",
      "required": [
        "amount",
        "claimLocator",
        "createdTimestamp",
        "locator",
        "reserveCurrency",
        "reserveType",
        "subClaimLocator"
      ],
      "properties": {
        "amount": {
          "type": "number"
        },
        "claimLocator": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "createdTimestamp": {
          "type": "timestamp"
        },
        "locator": {
          "type": "string"
        },
        "recipient": {
          "type": "string"
        },
        "reserveCurrency": {
          "type": "string"
        },
        "reserveType": {
          "type": "string",
          "enum": [
            "loss",
            "expense"
          ]
        },
        "reversalLocator": {
          "type": "string"
        },
        "reversedLocator": {
          "type": "string"
        },
        "subClaimLocator": {
          "type": "string"
        }
      }
    },
    "SubClaimPayableReverseRequest": {
      "type": "object",
      "required": [
        "payableLocator"
      ],
      "properties": {
        "comment": {
          "type": "string"
        },
        "payableLocator": {
          "type": "string"
        }
      }
    },
    "SubClaimResponse": {
      "type": "object",
      "required": [
        "claimLocator",
        "createdTimestamp",
        "currentStatus",
        "expenseReserve",
        "exposureLocator",
        "fieldGroupsByLocator",
        "fieldValues",
        "locator",
        "lossReserve",
        "perilLocator",
        "reserveCurrency",
        "updatedTimestamp"
      ],
      "properties": {
        "claimLocator": {
          "type": "string"
        },
        "createdTimestamp": {
          "type": "timestamp"
        },
        "currentStatus": {
          "type": "string",
          "enum": [
            "open",
            "closed"
          ]
        },
        "expenseLedger": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LedgerLineItem"
          }
        },
        "expenseReserve": {
          "$ref": "#/definitions/ReserveResponse"
        },
        "exposureLocator": {
          "type": "string"
        },
        "fieldGroupsByLocator": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "fieldValues": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "locator": {
          "type": "string"
        },
        "lossLedger": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LedgerLineItem"
          }
        },
        "lossReserve": {
          "$ref": "#/definitions/ReserveResponse"
        },
        "perilLocator": {
          "type": "string"
        },
        "reserveCurrency": {
          "type": "string"
        },
        "updatedTimestamp": {
          "type": "timestamp"
        }
      }
    },
    "SubClaimSummary": {
      "type": "object",
      "required": [
        "expensePayableAmount",
        "expenseReserveAmount",
        "lossPayableAmount",
        "lossReserveAmount",
        "reserveCurrency"
      ],
      "properties": {
        "expensePayableAmount": {
          "type": "number"
        },
        "expenseReserveAmount": {
          "type": "number"
        },
        "lossPayableAmount": {
          "type": "number"
        },
        "lossReserveAmount": {
          "type": "number"
        },
        "reserveCurrency": {
          "type": "string"
        }
      }
    },
    "SubClaimUpdateRequest": {
      "type": "object",
      "required": [
        "addFieldGroups",
        "locator",
        "removeFieldGroups",
        "updateFieldGroups"
      ],
      "properties": {
        "addFieldGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldGroupCreateRequest"
          }
        },
        "expenseReserve": {
          "$ref": "#/definitions/ReserveSetRequest"
        },
        "fieldValues": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "locator": {
          "type": "string"
        },
        "lossReserve": {
          "$ref": "#/definitions/ReserveSetRequest"
        },
        "removeFieldGroups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "type": "string",
          "enum": [
            "open",
            "closed"
          ]
        },
        "updateFieldGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldGroupUpdateRequest"
          }
        }
      }
    },
    "SubEntityCreateRequest": {
      "type": "object",
      "required": [
        "completed",
        "ontologyUri",
        "values"
      ],
      "properties": {
        "completed": {
          "type": "boolean"
        },
        "localId": {
          "type": "string"
        },
        "ontologyUri": {
          "type": "string"
        },
        "values": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "SubEntityUpdateRequest": {
      "type": "object",
      "required": [
        "completed",
        "locator",
        "ontologyUri",
        "values"
      ],
      "properties": {
        "completed": {
          "type": "boolean"
        },
        "locator": {
          "type": "string"
        },
        "ontologyUri": {
          "type": "string"
        },
        "values": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "TaxChangeResponse": {
      "type": "object",
      "required": [
        "change",
        "name",
        "newAmount"
      ],
      "properties": {
        "change": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "newAmount": {
          "type": "number"
        }
      }
    },
    "TaxConfigurationResponse": {
      "type": "object",
      "required": [
        "displayName",
        "name"
      ],
      "properties": {
        "displayName": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "TaxGroupResponse": {
      "type": "object",
      "required": [
        "amount",
        "amountCurrency",
        "name"
      ],
      "properties": {
        "amount": {
          "type": "number"
        },
        "amountCurrency": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "TenantAssetsResponse": {
      "type": "object",
      "required": [
        "accountLocator",
        "locator",
        "tenantLocator",
        "uploadTimestamp"
      ],
      "properties": {
        "accountLocator": {
          "type": "string"
        },
        "deploymentTimestamp": {
          "type": "timestamp"
        },
        "locator": {
          "type": "string"
        },
        "tenantLocator": {
          "type": "string"
        },
        "uploadTimestamp": {
          "type": "timestamp"
        }
      }
    },
    "TenantStatsResponse": {
      "type": "object",
      "required": [
        "stats"
      ],
      "properties": {
        "stats": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "UnearnedPremiumReportRequest": {
      "type": "object",
      "required": [
        "reportTimestamp"
      ],
      "properties": {
        "reportTimestamp": {
          "type": "timestamp"
        }
      }
    },
    "ValidationFieldError2": {
      "type": "object",
      "required": [
        "code",
        "fieldName"
      ],
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "MISSING",
            "INVALID_FIELD",
            "INVALID_TYPE",
            "INVALID_VALUE"
          ]
        },
        "fieldName": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}